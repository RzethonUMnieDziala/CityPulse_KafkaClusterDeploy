[2018-12-09 01:43:45,916] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=43,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:46,918] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-43 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:46,920] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:46,921] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:46,923] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:46,923] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) correlation id 20 from controller 1 epoch 2 for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:46,923] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 20 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:46,924] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 20 from controller 1 epoch 2 for partition __consumer_offsets-43 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:46,924] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 20 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:46,925] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=43,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:46,925] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:46,925] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 21 (state.change.logger)
[2018-12-09 01:43:46,926] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:46,926] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=43,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:46,930] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=43,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:46,930] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=14,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:46,932] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:46,943] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-14 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:46,944] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:46,944] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) to broker 1 for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:46,944] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 3, 1], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:46,944] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) correlation id 22 from controller 1 epoch 2 for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:46,945] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 22 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:46,945] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:46,946] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 22 from controller 1 epoch 2 for partition __consumer_offsets-14 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:46,947] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=14,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:46,948] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 22 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:46,948] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=14,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:46,949] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 3, 1], offlineReplicas=[3]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 23 (state.change.logger)
[2018-12-09 01:43:46,949] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:46,950] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=14,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:46,950] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=28,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:46,951] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:46,971] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-28 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:46,971] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:46,971] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:46,971] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 3, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:46,972] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) correlation id 24 from controller 1 epoch 2 for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:46,972] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 24 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:46,972] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 24 from controller 1 epoch 2 for partition __consumer_offsets-28 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:46,972] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 24 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:46,972] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=28,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:46,972] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:46,972] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=28,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:46,973] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 3, 2], offlineReplicas=[3]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 25 (state.change.logger)
[2018-12-09 01:43:46,973] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:46,973] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=28,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:46,973] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:46,974] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=4,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:46,988] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-4 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:46,988] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:46,988] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:46,989] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 3, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:46,989] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) correlation id 26 from controller 1 epoch 2 for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:46,989] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 26 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:46,990] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:46,990] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:46,991] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=4,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:46,992] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 26 from controller 1 epoch 2 for partition __consumer_offsets-4 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:46,992] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 26 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:46,992] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=4,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:46,992] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:46,992] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=4,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:46,993] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 3, 2], offlineReplicas=[3]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 27 (state.change.logger)
[2018-12-09 01:43:46,993] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,015] TRACE [Controller id=1 epoch=2] Elected leader 1 for Offline partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:47,016] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-36 from OnlinePartition to OnlinePartition with leader 1 (state.change.logger)
[2018-12-09 01:43:47,016] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:47,016] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:47,016] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:47,016] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:47,017] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:47,017] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) correlation id 28 from controller 1 epoch 2 for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:47,017] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:47,018] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 28 for partition __consumer_offsets-36 (last update controller epoch 2) (state.change.logger)
[2018-12-09 01:43:47,018] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:47,021] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=36,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,024] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=36,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,025] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=36,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,025] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,026] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 29 (state.change.logger)
[2018-12-09 01:43:47,026] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,026] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,045] TRACE [Controller id=1 epoch=2] Elected leader 1 for Offline partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:47,045] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-6 from OnlinePartition to OnlinePartition with leader 1 (state.change.logger)
[2018-12-09 01:43:47,045] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:47,046] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:47,046] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:47,046] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:47,046] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:47,047] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=6,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,047] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) correlation id 30 from controller 1 epoch 2 for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:47,047] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 30 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:47,047] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 30 for partition __consumer_offsets-6 (last update controller epoch 2) (state.change.logger)
[2018-12-09 01:43:47,048] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 30 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:47,048] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,048] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=6,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,049] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,052] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=6,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,052] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 31 (state.change.logger)
[2018-12-09 01:43:47,052] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,061] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:47,061] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-39 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:47,061] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:47,061] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 1 for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:47,061] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:47,061] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:47,063] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=39,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,067] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,067] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=23,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,072] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=39,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,072] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) correlation id 32 from controller 1 epoch 2 for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:47,072] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 32 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:47,072] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 32 for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:47,072] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-39 as part of become-follower request with correlation id 32 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:47,073] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 32 from controller 1 epoch 2 for partition __consumer_offsets-39 since it is shutting down (state.change.logger)
[2018-12-09 01:43:47,073] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 32 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:47,074] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=39,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,074] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,074] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[3, 2, 1], offlineReplicas=[3]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 33 (state.change.logger)
[2018-12-09 01:43:47,075] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,078] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-23 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,078] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:47,078] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:47,078] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:47,078] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) correlation id 34 from controller 1 epoch 2 for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:47,078] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 34 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:47,078] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:47,078] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,078] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 34 from controller 1 epoch 2 for partition __consumer_offsets-23 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:47,079] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 34 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:47,079] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=23,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,079] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=23,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,079] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=23,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,080] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 3], offlineReplicas=[3]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 35 (state.change.logger)
[2018-12-09 01:43:47,080] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,080] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,094] TRACE [Controller id=1 epoch=2] Elected leader 1 for Offline partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:47,094] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-24 from OnlinePartition to OnlinePartition with leader 1 (state.change.logger)
[2018-12-09 01:43:47,094] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:47,094] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:47,094] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:47,094] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:47,095] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) correlation id 36 from controller 1 epoch 2 for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:47,095] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 36 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:47,096] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 36 for partition __consumer_offsets-24 (last update controller epoch 2) (state.change.logger)
[2018-12-09 01:43:47,096] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 36 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:47,096] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=24,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,097] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=24,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,097] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,098] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=38,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,098] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,098] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=24,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,099] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 37 (state.change.logger)
[2018-12-09 01:43:47,099] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,112] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-38 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,112] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:47,112] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) to broker 1 for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:47,112] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 3, 1], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:47,112] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) correlation id 38 from controller 1 epoch 2 for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:47,112] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 38 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:47,112] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 38 from controller 1 epoch 2 for partition __consumer_offsets-38 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:47,112] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 38 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:47,112] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,113] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=38,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,113] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=38,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,113] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,113] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 3, 1], offlineReplicas=[3]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 39 (state.change.logger)
[2018-12-09 01:43:47,113] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=38,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,113] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,114] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=16,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,129] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-16 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,129] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:47,129] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:47,129] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 3, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:47,130] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) correlation id 40 from controller 1 epoch 2 for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:47,130] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 40 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:47,131] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:47,132] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 40 from controller 1 epoch 2 for partition __consumer_offsets-16 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:47,132] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 40 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:47,132] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,133] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=16,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,133] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 3, 2], offlineReplicas=[3]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 41 (state.change.logger)
[2018-12-09 01:43:47,134] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,134] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=16,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,135] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=16,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,136] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,146] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:47,146] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-3 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:47,146] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:47,147] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 1 for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:47,147] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:47,147] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:47,147] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:47,150] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=3,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,152] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,156] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=3,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,157] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) correlation id 42 from controller 1 epoch 2 for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:47,157] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 42 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:47,159] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 42 for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:47,159] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-3 as part of become-follower request with correlation id 42 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:47,159] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,159] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 42 from controller 1 epoch 2 for partition __consumer_offsets-3 since it is shutting down (state.change.logger)
[2018-12-09 01:43:47,159] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 42 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:47,161] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=3,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,162] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[3, 2, 1], offlineReplicas=[3]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 43 (state.change.logger)
[2018-12-09 01:43:47,162] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,165] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:47,165] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-21 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:47,166] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:47,166] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 1 for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:47,166] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:47,167] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:47,170] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=21,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,176] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) correlation id 44 from controller 1 epoch 2 for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:47,177] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 44 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:47,182] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,183] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 44 for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:47,183] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-21 as part of become-follower request with correlation id 44 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:47,183] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 44 from controller 1 epoch 2 for partition __consumer_offsets-21 since it is shutting down (state.change.logger)
[2018-12-09 01:43:47,183] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 44 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:47,183] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=21,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,185] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=21,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,185] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[3, 2, 1], offlineReplicas=[3]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 45 (state.change.logger)
[2018-12-09 01:43:47,186] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,186] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,188] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=10,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,202] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-10 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,202] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:47,203] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:47,203] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 3, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:47,204] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) correlation id 46 from controller 1 epoch 2 for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:47,204] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 46 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:47,204] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,205] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 46 from controller 1 epoch 2 for partition __consumer_offsets-10 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:47,205] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 46 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:47,206] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=10,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,206] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=10,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,207] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=10,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,207] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 3, 2], offlineReplicas=[3]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 47 (state.change.logger)
[2018-12-09 01:43:47,208] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,208] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,209] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=40,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,230] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-40 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,230] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:47,230] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:47,230] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 3, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:47,231] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) correlation id 48 from controller 1 epoch 2 for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:47,231] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 48 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:47,232] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,233] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 48 from controller 1 epoch 2 for partition __consumer_offsets-40 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:47,233] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 48 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:47,233] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=40,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,233] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=40,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,234] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=40,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,235] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,236] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 3, 2], offlineReplicas=[3]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 49 (state.change.logger)
[2018-12-09 01:43:47,237] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=34,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,237] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,258] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-34 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,259] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:47,259] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:47,259] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 3, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:47,259] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) correlation id 50 from controller 1 epoch 2 for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:47,260] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 50 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:47,261] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 50 from controller 1 epoch 2 for partition __consumer_offsets-34 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:47,261] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 50 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:47,261] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=34,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,262] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=34,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,262] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,263] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 3, 2], offlineReplicas=[3]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 51 (state.change.logger)
[2018-12-09 01:43:47,263] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,263] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,264] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=34,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,267] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=25,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,286] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-25 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,286] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:47,286] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:47,286] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:47,287] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) correlation id 52 from controller 1 epoch 2 for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:47,287] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 52 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:47,288] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,288] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 52 from controller 1 epoch 2 for partition __consumer_offsets-25 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:47,288] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 52 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:47,288] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:47,288] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=25,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,288] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=25,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,289] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 53 (state.change.logger)
[2018-12-09 01:43:47,290] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,290] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=25,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,290] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,303] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:47,303] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-27 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:47,303] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:47,303] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 1 for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:47,304] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:47,304] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:47,304] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) correlation id 54 from controller 1 epoch 2 for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:47,304] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:47,304] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 54 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:47,309] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 54 for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:47,310] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-27 as part of become-follower request with correlation id 54 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:47,310] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 54 from controller 1 epoch 2 for partition __consumer_offsets-27 since it is shutting down (state.change.logger)
[2018-12-09 01:43:47,310] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 54 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:47,312] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=27,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,313] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=27,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,315] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,314] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=27,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,315] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[3, 2, 1], offlineReplicas=[3]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 55 (state.change.logger)
[2018-12-09 01:43:47,316] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,316] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,330] TRACE [Controller id=1 epoch=2] Elected leader 1 for Offline partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:47,331] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-42 from OnlinePartition to OnlinePartition with leader 1 (state.change.logger)
[2018-12-09 01:43:47,331] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:47,331] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:47,331] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:47,331] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:47,332] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) correlation id 56 from controller 1 epoch 2 for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:47,332] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 56 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:47,335] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 56 for partition __consumer_offsets-42 (last update controller epoch 2) (state.change.logger)
[2018-12-09 01:43:47,335] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 56 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:47,336] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=42,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,338] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,338] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=42,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,338] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=42,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,339] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 57 (state.change.logger)
[2018-12-09 01:43:47,339] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,340] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,341] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=11,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,359] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-11 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,360] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:47,360] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:47,361] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:47,361] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) correlation id 58 from controller 1 epoch 2 for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:47,362] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 58 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:47,362] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 58 from controller 1 epoch 2 for partition __consumer_offsets-11 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:47,363] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 58 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:47,363] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=11,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,363] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,363] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=11,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,364] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 3], offlineReplicas=[3]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 59 (state.change.logger)
[2018-12-09 01:43:47,365] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,365] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,365] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=11,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,368] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=7,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,387] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-7 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,387] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:47,387] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:47,387] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:47,388] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) correlation id 60 from controller 1 epoch 2 for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:47,388] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 60 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:47,389] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,389] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 60 from controller 1 epoch 2 for partition __consumer_offsets-7 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:47,389] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 60 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:47,390] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=7,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,391] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=7,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,391] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=7,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,392] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 61 (state.change.logger)
[2018-12-09 01:43:47,392] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,392] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,393] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=47,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,404] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-47 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,404] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:47,404] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:47,405] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:47,405] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:47,405] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) correlation id 62 from controller 1 epoch 2 for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:47,405] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 62 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:47,406] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 62 from controller 1 epoch 2 for partition __consumer_offsets-47 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:47,406] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 62 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:47,407] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=47,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,407] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,407] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=47,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,409] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,409] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=47,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,409] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 3], offlineReplicas=[3]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 63 (state.change.logger)
[2018-12-09 01:43:47,409] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,449] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:47,449] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-9 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:47,449] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:47,450] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 1 for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:47,450] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:47,450] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:47,450] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) correlation id 64 from controller 1 epoch 2 for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:47,451] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 64 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:47,452] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 64 for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:47,452] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-9 as part of become-follower request with correlation id 64 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:47,452] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 64 from controller 1 epoch 2 for partition __consumer_offsets-9 since it is shutting down (state.change.logger)
[2018-12-09 01:43:47,452] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 64 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:47,453] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=9,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,453] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=9,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,456] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[3, 2, 1], offlineReplicas=[3]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 65 (state.change.logger)
[2018-12-09 01:43:47,456] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=9,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,457] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,457] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,458] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,460] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=13,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,466] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-13 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,466] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:47,466] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:47,466] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:47,467] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) correlation id 66 from controller 1 epoch 2 for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:47,467] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 66 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:47,468] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,468] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=13,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,469] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 66 from controller 1 epoch 2 for partition __consumer_offsets-13 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:47,469] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 66 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:47,469] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=13,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,469] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=13,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,471] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,471] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 67 (state.change.logger)
[2018-12-09 01:43:47,472] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,488] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-29 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,488] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:47,488] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:47,488] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:47,493] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) correlation id 68 from controller 1 epoch 2 for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:47,493] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 68 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:47,493] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 68 from controller 1 epoch 2 for partition __consumer_offsets-29 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:47,494] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 68 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:47,494] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=29,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,495] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=29,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,497] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,498] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 3], offlineReplicas=[3]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 69 (state.change.logger)
[2018-12-09 01:43:47,501] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,505] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=29,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,507] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,508] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=29,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,510] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=8,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,511] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-8 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,511] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:47,511] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) to broker 1 for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:47,511] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 3, 1], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:47,512] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) correlation id 70 from controller 1 epoch 2 for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:47,512] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 70 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:47,512] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 70 from controller 1 epoch 2 for partition __consumer_offsets-8 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:47,512] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 70 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:47,513] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,513] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=8,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,514] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 3, 1], offlineReplicas=[3]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 71 (state.change.logger)
[2018-12-09 01:43:47,514] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,514] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=8,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,516] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,517] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=8,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,519] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=22,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,539] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-22 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,539] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:47,540] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:47,540] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 3, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:47,540] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) correlation id 72 from controller 1 epoch 2 for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:47,540] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 72 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:47,541] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 72 from controller 1 epoch 2 for partition __consumer_offsets-22 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:47,541] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 72 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:47,541] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=22,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,542] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=22,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,543] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,544] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,544] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 3, 2], offlineReplicas=[3]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 73 (state.change.logger)
[2018-12-09 01:43:47,545] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=22,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,546] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,547] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=31,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,556] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-31 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,556] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:47,556] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:47,556] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:47,557] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) correlation id 74 from controller 1 epoch 2 for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:47,557] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 74 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:47,557] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:47,559] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=31,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,559] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 74 from controller 1 epoch 2 for partition __consumer_offsets-31 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:47,559] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 74 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:47,559] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,560] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,560] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=31,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,561] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 75 (state.change.logger)
[2018-12-09 01:43:47,562] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,563] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=31,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,573] TRACE [Controller id=1 epoch=2] Elected leader 1 for Offline partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:47,573] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-18 from OnlinePartition to OnlinePartition with leader 1 (state.change.logger)
[2018-12-09 01:43:47,573] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:47,573] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:47,574] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:47,574] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:47,574] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) correlation id 76 from controller 1 epoch 2 for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:47,574] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 76 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:47,576] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 76 for partition __consumer_offsets-18 (last update controller epoch 2) (state.change.logger)
[2018-12-09 01:43:47,577] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 76 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:47,577] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=18,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,578] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=18,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,580] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,580] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,580] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=18,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,582] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=20,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,582] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 77 (state.change.logger)
[2018-12-09 01:43:47,582] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,591] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-20 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,591] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:47,591] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) to broker 1 for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:47,592] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 3, 1], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:47,593] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,594] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) correlation id 78 from controller 1 epoch 2 for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:47,594] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 78 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:47,594] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 78 from controller 1 epoch 2 for partition __consumer_offsets-20 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:47,594] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 78 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:47,598] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=20,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,598] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 3, 1], offlineReplicas=[3]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 79 (state.change.logger)
[2018-12-09 01:43:47,599] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,599] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=20,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,601] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=37,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,604] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=20,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,605] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,630] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-37 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,630] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:47,630] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:47,630] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:47,632] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=37,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,634] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,635] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,637] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=37,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,639] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,639] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) correlation id 80 from controller 1 epoch 2 for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:47,639] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 80 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:47,640] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 80 from controller 1 epoch 2 for partition __consumer_offsets-37 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:47,640] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 80 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:47,640] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=37,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,641] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 81 (state.change.logger)
[2018-12-09 01:43:47,641] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,646] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-49 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,646] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:47,646] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:47,646] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:47,647] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:47,648] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) correlation id 82 from controller 1 epoch 2 for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:47,648] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 82 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:47,648] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,650] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,650] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 82 from controller 1 epoch 2 for partition __consumer_offsets-49 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:47,651] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 82 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:47,651] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,652] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,652] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,654] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 83 (state.change.logger)
[2018-12-09 01:43:47,655] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,674] TRACE [Controller id=1 epoch=2] Elected leader 1 for Offline partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:47,674] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-12 from OnlinePartition to OnlinePartition with leader 1 (state.change.logger)
[2018-12-09 01:43:47,674] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:47,674] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:47,674] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:47,676] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=12,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,676] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=12,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,676] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:47,677] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,677] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,678] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) correlation id 84 from controller 1 epoch 2 for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:47,678] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 84 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:47,678] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 84 for partition __consumer_offsets-12 (last update controller epoch 2) (state.change.logger)
[2018-12-09 01:43:47,678] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=5,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,678] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 84 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:47,679] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=12,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,679] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 85 (state.change.logger)
[2018-12-09 01:43:47,680] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,690] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-5 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,690] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:47,690] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:47,690] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:47,691] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) correlation id 86 from controller 1 epoch 2 for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:47,691] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 86 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:47,691] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 86 from controller 1 epoch 2 for partition __consumer_offsets-5 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:47,691] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 86 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:47,691] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=5,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,692] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 3], offlineReplicas=[3]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 87 (state.change.logger)
[2018-12-09 01:43:47,692] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,692] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=5,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,692] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,693] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,693] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=5,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,694] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=32,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,707] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-32 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,708] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:47,708] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) to broker 1 for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:47,708] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 3, 1], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:47,708] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) correlation id 88 from controller 1 epoch 2 for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:47,708] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 88 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:47,708] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 88 from controller 1 epoch 2 for partition __consumer_offsets-32 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:47,709] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 88 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:47,709] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=32,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,709] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,709] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=32,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,710] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,710] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=32,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,710] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 3, 1], offlineReplicas=[3]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 89 (state.change.logger)
[2018-12-09 01:43:47,711] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,711] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=2,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,724] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,724] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:47,724] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) to broker 1 for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:47,724] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 3, 1], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:47,725] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) correlation id 90 from controller 1 epoch 2 for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:47,725] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 90 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:47,725] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 90 from controller 1 epoch 2 for partition __consumer_offsets-2 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:47,725] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,726] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=2,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,726] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=2,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,726] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 90 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:47,726] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=2,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,726] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 3, 1], offlineReplicas=[3]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 91 (state.change.logger)
[2018-12-09 01:43:47,727] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,727] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=1,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,727] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,741] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-1 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,741] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:47,742] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:47,742] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:47,742] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:47,742] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) correlation id 92 from controller 1 epoch 2 for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:47,742] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,742] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 92 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:47,743] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 92 from controller 1 epoch 2 for partition __consumer_offsets-1 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:47,743] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=1,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,743] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 92 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:47,743] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=1,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,743] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=1,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,743] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,744] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 93 (state.change.logger)
[2018-12-09 01:43:47,744] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,758] TRACE [Controller id=1 epoch=2] Elected leader 1 for Offline partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:47,758] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-0 from OnlinePartition to OnlinePartition with leader 1 (state.change.logger)
[2018-12-09 01:43:47,758] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:47,759] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:47,759] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:47,759] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:47,759] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:47,759] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) correlation id 94 from controller 1 epoch 2 for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:47,759] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 94 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:47,760] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 94 for partition __consumer_offsets-0 (last update controller epoch 2) (state.change.logger)
[2018-12-09 01:43:47,760] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 94 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:47,760] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=0,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,760] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=0,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,761] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,761] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=0,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,762] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,764] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 95 (state.change.logger)
[2018-12-09 01:43:47,765] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,787] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:47,787] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-15 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:47,787] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:47,787] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 1 for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:47,787] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:47,788] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) correlation id 96 from controller 1 epoch 2 for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:47,788] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 96 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:47,790] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 96 for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:47,790] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-15 as part of become-follower request with correlation id 96 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:47,790] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 96 from controller 1 epoch 2 for partition __consumer_offsets-15 since it is shutting down (state.change.logger)
[2018-12-09 01:43:47,790] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 96 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:47,792] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=15,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,788] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:47,792] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=15,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,794] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,796] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=44,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,797] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=15,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,798] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,798] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[3, 2, 1], offlineReplicas=[3]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 97 (state.change.logger)
[2018-12-09 01:43:47,798] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,815] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-44 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,815] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:47,815] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) to broker 1 for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:47,815] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 3, 1], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:47,817] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) correlation id 98 from controller 1 epoch 2 for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:47,818] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 98 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:47,818] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 98 from controller 1 epoch 2 for partition __consumer_offsets-44 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:47,818] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=44,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,819] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 98 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:47,819] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,819] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,820] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=44,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,821] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 3, 1], offlineReplicas=[3]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 99 (state.change.logger)
[2018-12-09 01:43:47,821] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=44,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,821] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,823] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=17,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,832] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-17 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,833] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:47,833] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:47,833] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:47,834] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,835] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) correlation id 100 from controller 1 epoch 2 for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:47,835] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 100 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:47,835] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 100 from controller 1 epoch 2 for partition __consumer_offsets-17 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:47,835] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 100 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:47,836] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=17,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,836] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=17,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,837] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 3], offlineReplicas=[3]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 101 (state.change.logger)
[2018-12-09 01:43:47,837] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,837] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,838] TRACE [Controller id=1 epoch=2] Started leader election for partition temperature-1 (state.change.logger)
[2018-12-09 01:43:47,838] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=17,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,859] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition temperature-1 (state.change.logger)
[2018-12-09 01:43:47,860] TRACE [Controller id=1 epoch=2] Changed partition temperature-1 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:47,860] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2, zkVersion=1, replicas=3,2, isNew=false) to broker 2 for partition temperature-1 (state.change.logger)
[2018-12-09 01:43:47,860] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2, zkVersion=1, replicas=3,2, isNew=false) to broker 3 for partition temperature-1 (state.change.logger)
[2018-12-09 01:43:47,861] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[3, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition temperature-1 (state.change.logger)
[2018-12-09 01:43:47,862] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:47,863] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[3, 2], offlineReplicas=[3]) for partition temperature-1 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 102 (state.change.logger)
[2018-12-09 01:43:47,863] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=temperature,partition=1,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,864] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,864] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,865] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=temperature,partition=1,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,867] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,888] TRACE [Controller id=1 epoch=2] Elected leader 1 for Offline partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:47,888] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-48 from OnlinePartition to OnlinePartition with leader 1 (state.change.logger)
[2018-12-09 01:43:47,888] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:47,888] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:47,888] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:47,889] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:47,889] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) correlation id 103 from controller 1 epoch 2 for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:47,889] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 103 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:47,891] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 103 for partition __consumer_offsets-48 (last update controller epoch 2) (state.change.logger)
[2018-12-09 01:43:47,891] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 103 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:47,892] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=48,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,892] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=48,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,893] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=48,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,893] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,894] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 104 (state.change.logger)
[2018-12-09 01:43:47,895] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,895] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=26,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,896] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,905] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-26 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,905] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:47,905] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) to broker 1 for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:47,905] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 3, 1], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:47,907] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,907] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,3,1, isNew=false) correlation id 105 from controller 1 epoch 2 for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:47,907] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 105 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:47,907] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 105 from controller 1 epoch 2 for partition __consumer_offsets-26 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:47,908] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:47,908] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 105 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:47,908] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=26,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,909] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=26,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,909] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=26,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,910] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 3, 1], offlineReplicas=[3]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 106 (state.change.logger)
[2018-12-09 01:43:47,910] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,910] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,960] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:47,961] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-33 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:47,961] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:47,961] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 1 for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:47,961] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:47,962] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) correlation id 107 from controller 1 epoch 2 for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:47,962] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 107 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:47,963] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:47,963] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 107 for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:47,965] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-33 as part of become-follower request with correlation id 107 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:47,965] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 107 from controller 1 epoch 2 for partition __consumer_offsets-33 since it is shutting down (state.change.logger)
[2018-12-09 01:43:47,965] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 107 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:47,966] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=33,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,966] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=33,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,968] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=33,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,969] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,969] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[3, 2, 1], offlineReplicas=[3]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 108 (state.change.logger)
[2018-12-09 01:43:47,970] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,970] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,972] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=temperature,partition=2,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,989] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition temperature-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:47,989] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1, zkVersion=1, replicas=1,3, isNew=false) to broker 1 for partition temperature-2 (state.change.logger)
[2018-12-09 01:43:47,989] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition temperature-2 (state.change.logger)
[2018-12-09 01:43:47,990] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1, zkVersion=1, replicas=1,3, isNew=false) correlation id 109 from controller 1 epoch 2 for partition temperature-2 (state.change.logger)
[2018-12-09 01:43:47,990] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 109 from controller 1 epoch 2 starting the become-leader transition for partition temperature-2 (state.change.logger)
[2018-12-09 01:43:47,991] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,991] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:47,991] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 109 from controller 1 epoch 2 for partition temperature-2 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:47,991] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 109 from controller 1 epoch 2 for the become-leader transition for partition temperature-2 (state.change.logger)
[2018-12-09 01:43:47,992] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=temperature,partition=2,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,992] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=temperature,partition=2,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:47,993] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 3], offlineReplicas=[3]) for partition temperature-2 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 110 (state.change.logger)
[2018-12-09 01:43:47,994] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:47,994] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=41,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:48,006] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-41 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,006] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:48,006] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:48,006] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:48,008] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:48,008] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:48,009] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=41,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,009] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) correlation id 111 from controller 1 epoch 2 for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:48,010] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=41,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:48,010] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 111 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:48,011] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,011] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 111 from controller 1 epoch 2 for partition __consumer_offsets-41 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:48,011] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 111 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:48,012] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=41,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,014] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 3], offlineReplicas=[3]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 112 (state.change.logger)
[2018-12-09 01:43:48,015] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,034] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:48,034] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-45 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,034] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:48,034] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 1 for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:48,035] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:48,035] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:48,036] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=3,2,1, isNew=false) correlation id 113 from controller 1 epoch 2 for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:48,036] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 113 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:48,037] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 113 for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:48,037] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-45 as part of become-follower request with correlation id 113 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,037] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 113 from controller 1 epoch 2 for partition __consumer_offsets-45 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,037] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 113 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:48,038] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=45,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:48,039] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:48,040] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=45,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,040] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=45,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,041] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,043] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=35,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:48,043] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[3, 2, 1], offlineReplicas=[3]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 114 (state.change.logger)
[2018-12-09 01:43:48,047] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,062] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-35 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,062] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:48,062] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:48,062] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:48,063] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,1,3, isNew=false) correlation id 115 from controller 1 epoch 2 for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:48,063] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 115 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:48,063] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:48,064] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 115 from controller 1 epoch 2 for partition __consumer_offsets-35 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:48,064] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=35,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,065] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 115 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:48,065] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,065] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=35,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,067] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 1, 3], offlineReplicas=[3]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 116 (state.change.logger)
[2018-12-09 01:43:48,068] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,079] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-46 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,079] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:48,079] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:48,080] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 3, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:48,080] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,3,2, isNew=false) correlation id 117 from controller 1 epoch 2 for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:48,080] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 117 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:48,081] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 117 from controller 1 epoch 2 for partition __consumer_offsets-46 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:48,081] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 117 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:48,081] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=46,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,082] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=46,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,083] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,083] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 3, 2], offlineReplicas=[3]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 118 (state.change.logger)
[2018-12-09 01:43:48,084] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,096] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-19 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,096] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:48,096] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:48,096] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:48,097] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=1,2,3, isNew=false) correlation id 119 from controller 1 epoch 2 for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:48,097] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 119 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:48,097] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:48,098] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 119 from controller 1 epoch 2 for partition __consumer_offsets-19 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2018-12-09 01:43:48,098] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 119 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:48,098] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=19,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,103] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,103] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=35,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:48,103] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=19,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,104] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[1, 2, 3], offlineReplicas=[3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 120 (state.change.logger)
[2018-12-09 01:43:48,105] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=46,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:48,105] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,106] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:48,107] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=46,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:48,108] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=19,error_code=0}]} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:48,110] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9094 (id: 3 rack: null) (state.change.logger)
[2018-12-09 01:43:48,113] TRACE [Controller id=1 epoch=2] Elected leader 1 for Offline partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:48,113] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-30 from OnlinePartition to OnlinePartition with leader 1 (state.change.logger)
[2018-12-09 01:43:48,113] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:48,113] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:48,114] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) correlation id 121 from controller 1 epoch 2 for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:48,114] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 121 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:48,118] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:48,118] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:48,119] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 121 for partition __consumer_offsets-30 (last update controller epoch 2) (state.change.logger)
[2018-12-09 01:43:48,119] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 121 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:48,124] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:48,140] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:48,141] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-43 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,141] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:48,141] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:48,141] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:48,142] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:48,161] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=30,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,166] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 122 (state.change.logger)
[2018-12-09 01:43:48,167] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,167] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-14 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,167] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:48,167] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:48,167] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:48,169] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 123 from controller 1 epoch 2 for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:48,169] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 123 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:48,169] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:48,170] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 123 for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:48,177] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=30,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,181] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-43 as part of become-follower request with correlation id 123 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,181] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 123 from controller 1 epoch 2 for partition __consumer_offsets-43 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,181] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 123 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:48,182] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=43,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,183] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 124 (state.change.logger)
[2018-12-09 01:43:48,184] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,185] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:48,185] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:48,185] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,185] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=14,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,186] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[3, 1]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 126 (state.change.logger)
[2018-12-09 01:43:48,187] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,188] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:48,188] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:48,188] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=14,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,188] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:48,189] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-28 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,189] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:48,189] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:48,189] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:48,189] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:48,190] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:48,190] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) correlation id 128 from controller 1 epoch 2 for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:48,190] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 128 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:48,191] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 128 for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:48,191] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-28 as part of become-follower request with correlation id 128 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,192] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 128 from controller 1 epoch 2 for partition __consumer_offsets-28 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,192] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 128 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:48,192] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=43,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,193] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=28,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,194] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 129 (state.change.logger)
[2018-12-09 01:43:48,196] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,203] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,206] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=14,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,209] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,212] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=28,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,213] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,213] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:48,215] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-4 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,215] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:48,216] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:48,216] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:48,216] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:48,217] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) correlation id 130 from controller 1 epoch 2 for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:48,217] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 130 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:48,217] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 130 for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:48,218] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-4 as part of become-follower request with correlation id 130 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,218] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 130 from controller 1 epoch 2 for partition __consumer_offsets-4 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,218] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 130 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:48,219] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:48,222] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=4,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,224] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=4,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,225] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 131 (state.change.logger)
[2018-12-09 01:43:48,230] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,230] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,241] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:48,241] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-36 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,242] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:48,242] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:48,242] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:48,242] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:48,242] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 132 from controller 1 epoch 2 for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:48,243] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:48,243] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 132 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:48,243] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 132 for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:48,243] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-36 as part of become-follower request with correlation id 132 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,243] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 132 from controller 1 epoch 2 for partition __consumer_offsets-36 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,243] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 132 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:48,245] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=36,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,245] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=36,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,245] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 133 (state.change.logger)
[2018-12-09 01:43:48,246] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,246] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,269] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:48,270] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-6 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,270] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:48,270] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:48,270] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:48,270] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:48,270] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 134 from controller 1 epoch 2 for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:48,270] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 134 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:48,270] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 134 for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:48,270] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-6 as part of become-follower request with correlation id 134 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,270] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 134 from controller 1 epoch 2 for partition __consumer_offsets-6 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,270] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 134 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:48,271] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=6,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,273] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 135 (state.change.logger)
[2018-12-09 01:43:48,273] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,273] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:48,273] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:48,273] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=39,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,281] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=6,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,282] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,286] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-39 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,286] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:48,286] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:48,287] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:48,288] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=39,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,289] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,290] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 1]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 137 (state.change.logger)
[2018-12-09 01:43:48,291] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,291] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:48,291] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:48,291] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=39,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,292] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:48,292] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:48,292] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=23,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,304] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-23 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,304] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:48,304] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:48,304] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:48,304] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:48,304] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 140 (state.change.logger)
[2018-12-09 01:43:48,304] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,305] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:48,305] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:48,305] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=23,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,305] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=23,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,306] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,321] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:48,322] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-24 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,322] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:48,322] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:48,322] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:48,322] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:48,323] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 142 from controller 1 epoch 2 for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:48,323] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 142 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:48,323] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 142 for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:48,323] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-24 as part of become-follower request with correlation id 142 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,324] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 142 from controller 1 epoch 2 for partition __consumer_offsets-24 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,324] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 142 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:48,324] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=24,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,325] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=24,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,325] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 143 (state.change.logger)
[2018-12-09 01:43:48,325] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,326] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,327] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:48,327] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:48,328] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=38,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,371] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-38 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,371] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:48,372] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:48,372] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:48,372] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:48,374] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[3, 1]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 145 (state.change.logger)
[2018-12-09 01:43:48,374] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=38,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,374] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,375] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:48,376] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,379] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:48,380] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=38,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,388] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:48,389] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-16 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,389] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:48,389] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:48,389] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:48,389] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:48,390] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) correlation id 147 from controller 1 epoch 2 for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:48,390] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 147 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:48,391] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 147 for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:48,391] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-16 as part of become-follower request with correlation id 147 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,391] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 147 from controller 1 epoch 2 for partition __consumer_offsets-16 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,391] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 147 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:48,392] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=16,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,393] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=16,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,395] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,395] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 148 (state.change.logger)
[2018-12-09 01:43:48,396] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,399] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:48,399] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:48,399] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=3,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,417] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-3 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,417] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:48,417] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:48,417] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:48,419] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=3,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,419] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 1]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 150 (state.change.logger)
[2018-12-09 01:43:48,420] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,420] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:48,421] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:48,421] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=3,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,421] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,422] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:48,422] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:48,422] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=21,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,445] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-21 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,445] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:48,446] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:48,446] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:48,447] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 1]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 153 (state.change.logger)
[2018-12-09 01:43:48,448] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,449] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:48,449] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:48,449] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:48,449] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=21,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,452] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=21,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,454] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,483] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:48,483] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-10 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,483] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:48,484] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:48,484] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:48,484] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) correlation id 155 from controller 1 epoch 2 for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:48,484] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 155 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:48,485] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 155 for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:48,486] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-10 as part of become-follower request with correlation id 155 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,486] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 155 from controller 1 epoch 2 for partition __consumer_offsets-10 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,486] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 155 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:48,487] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=10,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,487] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=10,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,489] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:48,490] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 156 (state.change.logger)
[2018-12-09 01:43:48,491] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:48,492] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,493] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,528] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:48,528] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-40 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,528] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:48,529] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:48,529] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:48,529] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:48,529] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) correlation id 157 from controller 1 epoch 2 for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:48,529] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:48,529] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 157 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:48,530] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 157 for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:48,531] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-40 as part of become-follower request with correlation id 157 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,531] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 157 from controller 1 epoch 2 for partition __consumer_offsets-40 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,531] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 157 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:48,532] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=40,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,533] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=40,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,536] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,536] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 158 (state.change.logger)
[2018-12-09 01:43:48,536] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,545] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:48,546] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-34 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,546] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:48,546] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:48,546] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:48,546] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:48,547] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) correlation id 159 from controller 1 epoch 2 for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:48,547] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:48,547] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 159 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:48,547] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 159 for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:48,548] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-34 as part of become-follower request with correlation id 159 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,548] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 159 from controller 1 epoch 2 for partition __consumer_offsets-34 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,548] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 159 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:48,549] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=34,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,550] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=34,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,553] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 160 (state.change.logger)
[2018-12-09 01:43:48,554] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,554] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,562] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:48,562] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-25 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,562] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:48,563] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:48,563] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:48,563] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:48,563] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 161 from controller 1 epoch 2 for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:48,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 161 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:48,564] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 161 for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:48,564] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-25 as part of become-follower request with correlation id 161 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,564] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 161 from controller 1 epoch 2 for partition __consumer_offsets-25 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,565] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 161 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:48,565] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=25,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,566] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 162 (state.change.logger)
[2018-12-09 01:43:48,566] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,567] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=25,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,567] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:48,567] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:48,568] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=27,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,568] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,580] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-27 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,580] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:48,580] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:48,580] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:48,581] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:48,581] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 1]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 164 (state.change.logger)
[2018-12-09 01:43:48,581] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,583] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=27,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,583] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:48,583] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:48,583] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=27,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,584] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,607] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:48,607] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-42 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,607] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:48,607] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:48,608] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:48,608] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:48,608] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 166 from controller 1 epoch 2 for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:48,608] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 166 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:48,609] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 166 for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:48,609] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-42 as part of become-follower request with correlation id 166 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,609] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 166 from controller 1 epoch 2 for partition __consumer_offsets-42 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,609] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 166 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:48,611] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=42,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,611] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=42,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,612] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,613] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 167 (state.change.logger)
[2018-12-09 01:43:48,615] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,616] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:48,616] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:48,617] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=11,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,636] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-11 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,636] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:48,636] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:48,636] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:48,637] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 169 (state.change.logger)
[2018-12-09 01:43:48,638] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:48,642] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=11,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,643] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,644] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:48,644] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:48,645] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,645] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=11,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,663] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:48,663] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-7 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,663] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:48,664] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:48,664] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:48,664] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:48,664] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 171 from controller 1 epoch 2 for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:48,664] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 171 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:48,665] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 171 for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:48,665] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-7 as part of become-follower request with correlation id 171 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,665] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 171 from controller 1 epoch 2 for partition __consumer_offsets-7 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,666] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 171 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:48,667] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=7,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,675] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=7,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,679] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,680] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 172 (state.change.logger)
[2018-12-09 01:43:48,680] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,683] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:48,685] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:48,687] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=47,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,703] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-47 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,703] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:48,703] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:48,703] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:48,705] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 174 (state.change.logger)
[2018-12-09 01:43:48,706] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,706] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=47,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,706] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:48,706] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:48,708] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=47,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,708] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:48,709] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:48,709] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=9,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,710] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,730] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-9 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,730] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:48,730] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:48,730] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:48,730] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:48,730] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 1]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 177 (state.change.logger)
[2018-12-09 01:43:48,731] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,731] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:48,731] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:48,731] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=9,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,732] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=9,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,733] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,747] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:48,747] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-13 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,747] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:48,747] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:48,747] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:48,747] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:48,747] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 179 from controller 1 epoch 2 for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:48,747] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 179 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:48,748] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 179 for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:48,748] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-13 as part of become-follower request with correlation id 179 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,748] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 179 from controller 1 epoch 2 for partition __consumer_offsets-13 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,748] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 179 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:48,748] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=13,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,748] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=13,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,749] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,749] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 180 (state.change.logger)
[2018-12-09 01:43:48,750] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,755] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:48,755] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:48,755] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=29,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,775] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-29 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,775] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:48,775] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:48,775] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:48,776] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=29,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,776] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 182 (state.change.logger)
[2018-12-09 01:43:48,776] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,776] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:48,776] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:48,776] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=29,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,777] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:48,777] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:48,777] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=8,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,777] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,792] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-8 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,792] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:48,792] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:48,792] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:48,792] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[3, 1]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 185 (state.change.logger)
[2018-12-09 01:43:48,793] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,793] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:48,793] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:48,793] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:48,793] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=8,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,793] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=8,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,794] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,808] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:48,809] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-22 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,809] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:48,809] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:48,809] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:48,809] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:48,809] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:48,809] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) correlation id 187 from controller 1 epoch 2 for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:48,809] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 187 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:48,809] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 187 for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:48,810] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-22 as part of become-follower request with correlation id 187 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,810] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 187 from controller 1 epoch 2 for partition __consumer_offsets-22 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,810] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 187 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:48,810] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=22,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,811] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=22,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,811] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,811] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 188 (state.change.logger)
[2018-12-09 01:43:48,811] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,826] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:48,840] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-31 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,840] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:48,840] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:48,840] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:48,840] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:48,840] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:48,841] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=31,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,841] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,846] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 189 from controller 1 epoch 2 for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:48,846] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 189 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:48,846] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 189 for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:48,846] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-31 as part of become-follower request with correlation id 189 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,846] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 189 from controller 1 epoch 2 for partition __consumer_offsets-31 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,846] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 189 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:48,847] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=31,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,847] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 190 (state.change.logger)
[2018-12-09 01:43:48,847] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,864] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:48,865] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-18 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,865] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:48,865] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:48,865] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:48,865] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:48,865] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 191 from controller 1 epoch 2 for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:48,865] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 191 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:48,865] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 191 for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:48,865] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-18 as part of become-follower request with correlation id 191 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,865] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 191 from controller 1 epoch 2 for partition __consumer_offsets-18 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,865] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 191 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:48,866] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=18,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,866] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=18,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,866] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 192 (state.change.logger)
[2018-12-09 01:43:48,866] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,866] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,867] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:48,867] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:48,867] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=20,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,882] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-20 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,882] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:48,883] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:48,883] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:48,883] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:48,883] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[3, 1]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 194 (state.change.logger)
[2018-12-09 01:43:48,883] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,883] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:48,883] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:48,883] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=20,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,884] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=20,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,884] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,898] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:48,899] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-37 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,899] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:48,899] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:48,899] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:48,899] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:48,899] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 196 from controller 1 epoch 2 for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:48,900] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 196 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:48,900] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 196 for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:48,901] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=37,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,906] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-37 as part of become-follower request with correlation id 196 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,906] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 196 from controller 1 epoch 2 for partition __consumer_offsets-37 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,906] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 196 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:48,906] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,906] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:48,906] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=37,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,907] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 197 (state.change.logger)
[2018-12-09 01:43:48,907] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,927] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:48,927] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-49 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,927] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:48,927] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:48,927] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:48,927] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:48,927] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:48,927] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 198 from controller 1 epoch 2 for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:48,927] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 198 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:48,928] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 198 for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:48,928] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-49 as part of become-follower request with correlation id 198 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,928] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 198 from controller 1 epoch 2 for partition __consumer_offsets-49 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,928] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 198 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:48,928] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,928] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 199 (state.change.logger)
[2018-12-09 01:43:48,928] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,930] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,931] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,943] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:48,944] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-12 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:48,944] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:48,944] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:48,944] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:48,944] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:48,944] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 200 from controller 1 epoch 2 for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:48,944] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 200 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:48,944] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 200 for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:48,944] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-12 as part of become-follower request with correlation id 200 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:48,944] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 200 from controller 1 epoch 2 for partition __consumer_offsets-12 since it is shutting down (state.change.logger)
[2018-12-09 01:43:48,944] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 200 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:48,945] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=12,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,945] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 201 (state.change.logger)
[2018-12-09 01:43:48,946] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,946] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:48,946] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:48,946] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=5,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,946] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=12,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,947] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,961] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-5 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,961] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:48,961] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:48,961] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:48,962] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 203 (state.change.logger)
[2018-12-09 01:43:48,962] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,962] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:48,962] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:48,962] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=5,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,963] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:48,963] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:48,963] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=5,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,963] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=32,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,963] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,978] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-32 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,978] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:48,978] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:48,978] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:48,979] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[3, 1]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 206 (state.change.logger)
[2018-12-09 01:43:48,979] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,980] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=32,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,980] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:48,980] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:48,980] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=32,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,981] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,981] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:48,981] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:48,981] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=2,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,995] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:48,995] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:48,995] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:48,995] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:48,996] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:48,996] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[3, 1]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 209 (state.change.logger)
[2018-12-09 01:43:48,996] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=2,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,997] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:48,997] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:48,997] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:48,997] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:48,997] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=2,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,012] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:49,012] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-1 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:49,012] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:49,012] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:49,012] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:49,012] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:49,012] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:49,013] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 211 from controller 1 epoch 2 for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:49,013] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 211 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:49,013] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 211 for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:49,014] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-1 as part of become-follower request with correlation id 211 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:49,014] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 211 from controller 1 epoch 2 for partition __consumer_offsets-1 since it is shutting down (state.change.logger)
[2018-12-09 01:43:49,014] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 211 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:49,014] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=1,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,015] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=1,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,015] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,016] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 212 (state.change.logger)
[2018-12-09 01:43:49,016] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,046] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:49,046] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-0 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:49,046] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:49,047] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:49,047] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:49,047] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:49,047] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 213 from controller 1 epoch 2 for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:49,047] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 213 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:49,048] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 213 for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:49,048] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-0 as part of become-follower request with correlation id 213 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:49,048] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 213 from controller 1 epoch 2 for partition __consumer_offsets-0 since it is shutting down (state.change.logger)
[2018-12-09 01:43:49,048] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 213 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:49,053] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=0,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,054] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 214 (state.change.logger)
[2018-12-09 01:43:49,054] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,054] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=0,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,055] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:49,055] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:49,055] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=15,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,055] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,075] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-15 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:49,075] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:49,075] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:49,075] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:49,076] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 1]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 216 (state.change.logger)
[2018-12-09 01:43:49,076] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,077] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=15,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,078] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:49,078] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:49,078] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=15,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,078] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,080] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:49,080] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:49,080] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=44,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,102] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-44 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:49,102] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:49,102] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:49,103] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:49,104] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[3, 1]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 219 (state.change.logger)
[2018-12-09 01:43:49,104] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,105] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:49,106] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:49,106] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=44,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,106] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=44,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,107] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:49,107] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,107] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:49,108] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=17,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,131] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-17 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:49,131] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:49,131] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:49,131] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:49,132] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:49,132] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 222 (state.change.logger)
[2018-12-09 01:43:49,133] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,133] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=17,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,134] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:49,134] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:49,134] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=17,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,134] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,147] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:49,147] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-48 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:49,147] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:49,147] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:49,147] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:49,148] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:49,148] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 224 from controller 1 epoch 2 for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:49,148] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 224 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:49,149] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 224 for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:49,149] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-48 as part of become-follower request with correlation id 224 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:49,149] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 224 from controller 1 epoch 2 for partition __consumer_offsets-48 since it is shutting down (state.change.logger)
[2018-12-09 01:43:49,149] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 224 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:49,150] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=48,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,150] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=48,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,150] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 225 (state.change.logger)
[2018-12-09 01:43:49,151] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,152] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,153] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:49,153] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:49,153] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=26,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,176] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-26 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:49,176] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:49,176] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:49,176] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:49,178] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[3, 1]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 227 (state.change.logger)
[2018-12-09 01:43:49,178] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=26,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,178] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,180] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,182] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:49,182] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:49,182] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=26,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,183] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:49,183] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:49,184] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=33,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,203] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-33 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:49,203] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:49,204] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:49,204] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:49,205] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 1]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 230 (state.change.logger)
[2018-12-09 01:43:49,205] TRACE [Controller id=1 epoch=2] Started leader election for partition temperature-2 (state.change.logger)
[2018-12-09 01:43:49,205] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,205] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=33,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,205] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:49,206] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:49,206] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=33,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,208] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-2 due to: No other replicas in ISR 1 for temperature-2 besides shutting down brokers 1,3 (state.change.logger)
[2018-12-09 01:43:49,208] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,208] ERROR [Controller id=1 epoch=2] Initiated state change for partition temperature-2 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-2 due to: No other replicas in ISR 1 for temperature-2 besides shutting down brokers 1,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 1 for temperature-2 besides shutting down brokers 1,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,210] TRACE [Broker id=1] Handling stop replica (delete=false) for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:49,210] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:49,210] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=temperature,partition=0,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,232] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition temperature-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:49,232] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2, zkVersion=1, replicas=2,1, isNew=false) to broker 2 for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:49,232] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2, 1], offlineReplicas=[1]) to brokers Set(1, 2, 3) for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:49,233] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2, 1], offlineReplicas=[1]) for partition temperature-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 233 (state.change.logger)
[2018-12-09 01:43:49,235] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,235] TRACE [Broker id=1] Handling stop replica (delete=false) for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:49,235] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:49,236] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=temperature,partition=0,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,237] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=temperature,partition=0,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,237] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,239] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:49,239] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:49,239] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=41,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,259] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-41 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:49,259] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:49,259] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:49,260] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:49,262] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 236 (state.change.logger)
[2018-12-09 01:43:49,262] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=41,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,263] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,263] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,264] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:49,264] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:49,265] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=41,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,265] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:49,265] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:49,266] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=45,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,287] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-45 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:49,288] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:49,288] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:49,288] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:49,289] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 1]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 239 (state.change.logger)
[2018-12-09 01:43:49,289] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,290] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=45,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,290] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:49,291] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:49,291] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,291] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=45,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,292] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:49,293] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:49,293] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=35,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,315] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-35 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:49,315] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:49,316] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:49,316] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:49,322] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:49,332] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=35,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,332] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 242 (state.change.logger)
[2018-12-09 01:43:49,333] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,333] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,343] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:49,344] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-46 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:49,344] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:49,344] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:49,344] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:49,344] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:49,345] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:49,347] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=46,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,348] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,360] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:49,360] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-19 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:49,360] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:49,360] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:49,361] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:49,361] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2, 3) for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:49,361] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:49,388] TRACE [Controller id=1 epoch=2] Elected leader 2 for Offline partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:49,389] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-30 from OnlinePartition to OnlinePartition with leader 2 (state.change.logger)
[2018-12-09 01:43:49,389] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:49,389] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:49,389] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:49,389] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) to brokers Set(1, 2, 3) for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:49,395] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:49,396] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-43 due to: No other replicas in ISR 2 for __consumer_offsets-43 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,396] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-43 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-43 due to: No other replicas in ISR 2 for __consumer_offsets-43 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-43 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,397] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:49,399] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-14 due to: No other replicas in ISR 2 for __consumer_offsets-14 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,399] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-14 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-14 due to: No other replicas in ISR 2 for __consumer_offsets-14 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-14 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,400] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:49,401] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-28 due to: No other replicas in ISR 2 for __consumer_offsets-28 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,401] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-28 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-28 due to: No other replicas in ISR 2 for __consumer_offsets-28 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-28 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,402] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:49,404] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-4 due to: No other replicas in ISR 2 for __consumer_offsets-4 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,404] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-4 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-4 due to: No other replicas in ISR 2 for __consumer_offsets-4 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-4 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,405] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:49,406] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-36 due to: No other replicas in ISR 2 for __consumer_offsets-36 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,406] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-36 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-36 due to: No other replicas in ISR 2 for __consumer_offsets-36 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-36 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,407] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:49,408] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-6 due to: No other replicas in ISR 2 for __consumer_offsets-6 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,409] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-6 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-6 due to: No other replicas in ISR 2 for __consumer_offsets-6 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-6 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,410] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:49,412] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-39 due to: No other replicas in ISR 2 for __consumer_offsets-39 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,412] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-39 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-39 due to: No other replicas in ISR 2 for __consumer_offsets-39 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-39 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:49,413] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:49,414] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-23 due to: No other replicas in ISR 2 for __consumer_offsets-23 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,414] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-23 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-23 due to: No other replicas in ISR 2 for __consumer_offsets-23 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-23 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:49,415] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:49,416] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-24 due to: No other replicas in ISR 2 for __consumer_offsets-24 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,416] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-24 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-24 due to: No other replicas in ISR 2 for __consumer_offsets-24 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-24 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,418] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:49,420] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-38 due to: No other replicas in ISR 2 for __consumer_offsets-38 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,420] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-38 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-38 due to: No other replicas in ISR 2 for __consumer_offsets-38 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-38 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,421] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:49,422] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-16 due to: No other replicas in ISR 2 for __consumer_offsets-16 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,422] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-16 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-16 due to: No other replicas in ISR 2 for __consumer_offsets-16 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-16 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 26 more
[2018-12-09 01:43:49,423] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:49,425] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-3 due to: No other replicas in ISR 2 for __consumer_offsets-3 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,425] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-3 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-3 due to: No other replicas in ISR 2 for __consumer_offsets-3 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-3 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 26 more
[2018-12-09 01:43:49,426] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:49,427] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-21 due to: No other replicas in ISR 2 for __consumer_offsets-21 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,427] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-21 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-21 due to: No other replicas in ISR 2 for __consumer_offsets-21 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-21 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,428] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:49,430] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-10 due to: No other replicas in ISR 2 for __consumer_offsets-10 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,430] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-10 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-10 due to: No other replicas in ISR 2 for __consumer_offsets-10 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-10 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,431] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:49,432] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-40 due to: No other replicas in ISR 2 for __consumer_offsets-40 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,432] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-40 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-40 due to: No other replicas in ISR 2 for __consumer_offsets-40 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-40 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,433] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:49,434] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-34 due to: No other replicas in ISR 2 for __consumer_offsets-34 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,435] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-34 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-34 due to: No other replicas in ISR 2 for __consumer_offsets-34 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-34 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:49,435] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:49,437] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-25 due to: No other replicas in ISR 2 for __consumer_offsets-25 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,437] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-25 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-25 due to: No other replicas in ISR 2 for __consumer_offsets-25 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-25 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,438] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:49,442] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-27 due to: No other replicas in ISR 2 for __consumer_offsets-27 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,442] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-27 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-27 due to: No other replicas in ISR 2 for __consumer_offsets-27 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-27 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,443] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:49,445] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-42 due to: No other replicas in ISR 2 for __consumer_offsets-42 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,445] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-42 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-42 due to: No other replicas in ISR 2 for __consumer_offsets-42 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-42 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,447] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:49,449] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-11 due to: No other replicas in ISR 2 for __consumer_offsets-11 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,449] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-11 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-11 due to: No other replicas in ISR 2 for __consumer_offsets-11 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-11 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,450] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:49,451] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-7 due to: No other replicas in ISR 2 for __consumer_offsets-7 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,451] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-7 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-7 due to: No other replicas in ISR 2 for __consumer_offsets-7 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-7 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,452] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:49,454] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-47 due to: No other replicas in ISR 2 for __consumer_offsets-47 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,454] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-47 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-47 due to: No other replicas in ISR 2 for __consumer_offsets-47 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-47 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,455] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:49,458] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-9 due to: No other replicas in ISR 2 for __consumer_offsets-9 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,458] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-9 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-9 due to: No other replicas in ISR 2 for __consumer_offsets-9 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-9 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,459] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:49,462] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-13 due to: No other replicas in ISR 2 for __consumer_offsets-13 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,462] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-13 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-13 due to: No other replicas in ISR 2 for __consumer_offsets-13 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-13 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:49,463] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:49,465] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-29 due to: No other replicas in ISR 2 for __consumer_offsets-29 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,465] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-29 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-29 due to: No other replicas in ISR 2 for __consumer_offsets-29 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-29 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,466] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:49,467] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-8 due to: No other replicas in ISR 2 for __consumer_offsets-8 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,467] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-8 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-8 due to: No other replicas in ISR 2 for __consumer_offsets-8 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-8 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,471] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:49,472] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-22 due to: No other replicas in ISR 2 for __consumer_offsets-22 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,472] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-22 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-22 due to: No other replicas in ISR 2 for __consumer_offsets-22 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-22 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,473] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:49,473] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-31 due to: No other replicas in ISR 2 for __consumer_offsets-31 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,473] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-31 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-31 due to: No other replicas in ISR 2 for __consumer_offsets-31 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-31 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,474] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:49,475] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-18 due to: No other replicas in ISR 2 for __consumer_offsets-18 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,475] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-18 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-18 due to: No other replicas in ISR 2 for __consumer_offsets-18 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-18 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,476] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:49,477] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-20 due to: No other replicas in ISR 2 for __consumer_offsets-20 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,477] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-20 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-20 due to: No other replicas in ISR 2 for __consumer_offsets-20 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-20 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,477] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:49,478] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-37 due to: No other replicas in ISR 2 for __consumer_offsets-37 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,478] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-37 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-37 due to: No other replicas in ISR 2 for __consumer_offsets-37 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-37 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:49,479] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:49,480] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-49 due to: No other replicas in ISR 2 for __consumer_offsets-49 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,480] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-49 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-49 due to: No other replicas in ISR 2 for __consumer_offsets-49 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-49 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,481] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:49,482] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-12 due to: No other replicas in ISR 2 for __consumer_offsets-12 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,482] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-12 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-12 due to: No other replicas in ISR 2 for __consumer_offsets-12 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-12 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,482] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:49,484] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-5 due to: No other replicas in ISR 2 for __consumer_offsets-5 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,484] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-5 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-5 due to: No other replicas in ISR 2 for __consumer_offsets-5 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-5 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,485] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:49,486] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-32 due to: No other replicas in ISR 2 for __consumer_offsets-32 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,486] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-32 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-32 due to: No other replicas in ISR 2 for __consumer_offsets-32 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-32 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,487] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:49,488] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-2 due to: No other replicas in ISR 2 for __consumer_offsets-2 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,488] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-2 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-2 due to: No other replicas in ISR 2 for __consumer_offsets-2 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-2 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,489] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:49,490] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-1 due to: No other replicas in ISR 2 for __consumer_offsets-1 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,490] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-1 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-1 due to: No other replicas in ISR 2 for __consumer_offsets-1 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-1 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,490] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:49,491] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-0 due to: No other replicas in ISR 2 for __consumer_offsets-0 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,491] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-0 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-0 due to: No other replicas in ISR 2 for __consumer_offsets-0 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-0 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,492] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:49,493] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-15 due to: No other replicas in ISR 2 for __consumer_offsets-15 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,493] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-15 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-15 due to: No other replicas in ISR 2 for __consumer_offsets-15 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-15 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,493] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:49,494] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-44 due to: No other replicas in ISR 2 for __consumer_offsets-44 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,494] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-44 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-44 due to: No other replicas in ISR 2 for __consumer_offsets-44 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-44 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 25 more
[2018-12-09 01:43:49,495] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:49,496] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-17 due to: No other replicas in ISR 2 for __consumer_offsets-17 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,496] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-17 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-17 due to: No other replicas in ISR 2 for __consumer_offsets-17 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-17 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 25 more
[2018-12-09 01:43:49,496] TRACE [Controller id=1 epoch=2] Started leader election for partition temperature-1 (state.change.logger)
[2018-12-09 01:43:49,497] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-1 due to: No other replicas in ISR 2 for temperature-1 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,497] ERROR [Controller id=1 epoch=2] Initiated state change for partition temperature-1 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-1 due to: No other replicas in ISR 2 for temperature-1 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for temperature-1 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,498] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:49,499] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-48 due to: No other replicas in ISR 2 for __consumer_offsets-48 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,499] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-48 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-48 due to: No other replicas in ISR 2 for __consumer_offsets-48 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-48 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,499] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:49,500] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-26 due to: No other replicas in ISR 2 for __consumer_offsets-26 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,500] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-26 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-26 due to: No other replicas in ISR 2 for __consumer_offsets-26 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-26 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,501] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:49,501] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-33 due to: No other replicas in ISR 2 for __consumer_offsets-33 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,502] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-33 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-33 due to: No other replicas in ISR 2 for __consumer_offsets-33 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-33 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,502] TRACE [Controller id=1 epoch=2] Started leader election for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:49,503] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-0 due to: No other replicas in ISR 2 for temperature-0 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,503] ERROR [Controller id=1 epoch=2] Initiated state change for partition temperature-0 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-0 due to: No other replicas in ISR 2 for temperature-0 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for temperature-0 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:49,503] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:49,504] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-41 due to: No other replicas in ISR 2 for __consumer_offsets-41 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,504] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-41 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-41 due to: No other replicas in ISR 2 for __consumer_offsets-41 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-41 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:49,505] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:49,506] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-45 due to: No other replicas in ISR 2 for __consumer_offsets-45 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,506] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-45 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-45 due to: No other replicas in ISR 2 for __consumer_offsets-45 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-45 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:49,506] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:49,508] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-35 due to: No other replicas in ISR 2 for __consumer_offsets-35 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,508] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-35 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-35 due to: No other replicas in ISR 2 for __consumer_offsets-35 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-35 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,508] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:49,509] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-46 due to: No other replicas in ISR 2 for __consumer_offsets-46 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,509] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-46 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-46 due to: No other replicas in ISR 2 for __consumer_offsets-46 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-46 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,510] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:49,511] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-19 due to: No other replicas in ISR 2 for __consumer_offsets-19 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,511] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-19 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-19 due to: No other replicas in ISR 2 for __consumer_offsets-19 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-19 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:49,511] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:49,512] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-30 due to: No other replicas in ISR 2 for __consumer_offsets-30 besides shutting down brokers 1,2,3 (state.change.logger)
[2018-12-09 01:43:49,513] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-30 from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-30 due to: No other replicas in ISR 2 for __consumer_offsets-30 besides shutting down brokers 1,2,3
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:165)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-30 besides shutting down brokers 1,2,3
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:49,529] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=19,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,530] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,536] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=30,error_code=0}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,537] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:49,612] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:49,612] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:49,612] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=35,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,613] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) correlation id 244 from controller 1 epoch 2 for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:49,613] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 244 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:49,614] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 244 for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:49,614] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-46 as part of become-follower request with correlation id 244 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:49,614] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 244 from controller 1 epoch 2 for partition __consumer_offsets-46 since it is shutting down (state.change.logger)
[2018-12-09 01:43:49,614] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 244 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:49,615] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=46,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,615] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 245 (state.change.logger)
[2018-12-09 01:43:49,616] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,616] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 246 from controller 1 epoch 2 for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:49,616] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 246 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:49,617] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 246 for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:49,617] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-19 as part of become-follower request with correlation id 246 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:49,617] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 246 from controller 1 epoch 2 for partition __consumer_offsets-19 since it is shutting down (state.change.logger)
[2018-12-09 01:43:49,617] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 246 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:49,618] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=19,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,618] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 247 (state.change.logger)
[2018-12-09 01:43:49,619] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,619] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 248 from controller 1 epoch 2 for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:49,619] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 248 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:49,620] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 248 for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:49,620] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-30 as part of become-follower request with correlation id 248 from controller 1 epoch 2 (state.change.logger)
[2018-12-09 01:43:49,620] TRACE [Broker id=1] Skipped the adding-fetcher step of the become-follower state change with correlation id 248 from controller 1 epoch 2 for partition __consumer_offsets-30 since it is shutting down (state.change.logger)
[2018-12-09 01:43:49,620] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 248 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:49,621] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=30,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:49,622] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 249 (state.change.logger)
[2018-12-09 01:43:49,622] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-19 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition electricity-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-30 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-47 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-29 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-41 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-39 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-10 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-17 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-14 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-40 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-18 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition temperature-2 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-26 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition temperature-1 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-24 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,101] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-33 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition pollution-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-20 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-21 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-3 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-5 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-22 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-12 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-8 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition temperature-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-23 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-15 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-48 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-11 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-13 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition water-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-49 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-6 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-28 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-4 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-37 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-31 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-44 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-42 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition humidity-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-34 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-46 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,102] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-25 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,103] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-45 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,103] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-27 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,103] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-32 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,103] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-43 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,103] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-36 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,103] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-35 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,103] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-7 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,103] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-9 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,103] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-38 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,103] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-1 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,103] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-16 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,103] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-2 state from OnlinePartition to OfflinePartition (state.change.logger)
[2018-12-09 01:43:52,103] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:52,105] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-19 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,106] TRACE [Controller id=1 epoch=2] Started leader election for partition electricity-0 (state.change.logger)
[2018-12-09 01:43:52,108] ERROR [Controller id=1 epoch=2] Initiated state change for partition electricity-0 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition electricity-0 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,108] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:52,112] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-30 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,112] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:52,114] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-47 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,115] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:52,119] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-29 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,120] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:52,121] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-41 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,121] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:52,122] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-39 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,122] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:52,123] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-10 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,123] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:52,124] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-17 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,124] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:52,125] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-14 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,125] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:52,125] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-40 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,126] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:52,126] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-18 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,126] TRACE [Controller id=1 epoch=2] Started leader election for partition temperature-2 (state.change.logger)
[2018-12-09 01:43:52,127] ERROR [Controller id=1 epoch=2] Initiated state change for partition temperature-2 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition temperature-2 is alive. Live brokers are: [Set()], ISR brokers are: [1]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,127] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:52,128] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-0 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,128] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:52,129] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-26 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,129] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:52,129] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-24 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,129] TRACE [Controller id=1 epoch=2] Started leader election for partition temperature-1 (state.change.logger)
[2018-12-09 01:43:52,130] ERROR [Controller id=1 epoch=2] Initiated state change for partition temperature-1 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition temperature-1 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,130] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:52,131] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-33 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,131] TRACE [Controller id=1 epoch=2] Started leader election for partition pollution-0 (state.change.logger)
[2018-12-09 01:43:52,132] ERROR [Controller id=1 epoch=2] Initiated state change for partition pollution-0 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition pollution-0 is alive. Live brokers are: [Set()], ISR brokers are: [1]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,132] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:52,132] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-20 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,133] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:52,134] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-3 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,134] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:52,135] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-21 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,135] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:52,135] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-22 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,136] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:52,136] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-5 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,136] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:52,137] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-12 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,137] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:52,137] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-8 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,137] TRACE [Controller id=1 epoch=2] Started leader election for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:52,138] ERROR [Controller id=1 epoch=2] Initiated state change for partition temperature-0 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition temperature-0 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,138] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:52,139] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-23 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,139] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:52,139] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-15 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,139] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:52,140] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-48 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,140] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:52,141] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-11 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,141] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:52,143] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-13 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,143] TRACE [Controller id=1 epoch=2] Started leader election for partition water-0 (state.change.logger)
[2018-12-09 01:43:52,144] ERROR [Controller id=1 epoch=2] Initiated state change for partition water-0 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition water-0 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,144] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:52,145] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-49 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,145] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:52,147] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-6 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,147] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:52,148] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-28 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,148] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:52,149] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-4 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,149] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:52,150] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-37 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,150] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:52,151] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-31 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,151] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:52,152] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-44 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,154] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:52,155] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-42 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,155] TRACE [Controller id=1 epoch=2] Started leader election for partition humidity-0 (state.change.logger)
[2018-12-09 01:43:52,156] ERROR [Controller id=1 epoch=2] Initiated state change for partition humidity-0 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition humidity-0 is alive. Live brokers are: [Set()], ISR brokers are: [3]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,156] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:52,157] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-34 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,157] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:52,157] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-46 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,158] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:52,158] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-25 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,158] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:52,159] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-45 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,159] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:52,160] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-27 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,160] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:52,161] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-32 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,161] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:52,161] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-43 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,161] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:52,166] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-36 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,166] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:52,167] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-35 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,167] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:52,168] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-7 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,168] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:52,169] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-38 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,169] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:52,170] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-9 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,170] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:52,171] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-1 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,171] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:52,171] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-2 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,171] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:52,172] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-16 is alive. Live brokers are: [Set()], ISR brokers are: [2]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:455)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:430)
	at kafka.controller.KafkaController$BrokerChange.process(KafkaController.scala:1228)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2018-12-09 01:43:52,173] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-35 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,174] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-15 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,175] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-25 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,175] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-13 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,176] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-17 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,176] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-12 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,176] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-22 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,177] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-3 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,177] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-47 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,178] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-38 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,178] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-8 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,178] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-16 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,178] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition temperature-1 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,179] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-19 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,179] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition temperature-2 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,179] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-21 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,180] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-42 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,180] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-29 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,180] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-23 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,180] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-10 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,181] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-31 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,181] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-32 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,181] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-36 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,182] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-26 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,182] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-46 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,182] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-43 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,183] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-9 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,183] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-27 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,184] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-34 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,184] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-41 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,184] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-48 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,185] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-11 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,185] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-20 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,185] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-45 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,185] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-39 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,186] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-18 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,186] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-14 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,187] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-40 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,203] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition humidity-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,203] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-2 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,204] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-28 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,204] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-7 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,204] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-24 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,205] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-44 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,205] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-30 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,206] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-33 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,206] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,206] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-4 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,207] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-1 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,207] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-5 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,207] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-6 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-49 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-37 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2, zkVersion=1, replicas=3,2, isNew=false) to broker 2 for partition temperature-1 (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:52,208] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 1 for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 1 for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 1 for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 1 for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 1 for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 1 for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 1 for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 1 for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 1 for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 1 for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 1 for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1, zkVersion=1, replicas=1,3, isNew=false) to broker 1 for partition temperature-2 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 1 for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 1 for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:52,209] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 1 for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 1 for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 1 for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 1 for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 1 for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition temperature-1 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) to brokers Set(1, 2) for partition humidity-0 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:52,210] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 3], offlineReplicas=[1, 3]) to brokers Set(1, 2) for partition temperature-2 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1, zkVersion=1, replicas=1,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition temperature-2 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:52,211] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:52,215] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=13,error_code=11},{topic=__consumer_offsets,partition=46,error_code=11},{topic=__consumer_offsets,partition=9,error_code=11},{topic=__consumer_offsets,partition=42,error_code=11},{topic=__consumer_offsets,partition=21,error_code=11},{topic=__consumer_offsets,partition=17,error_code=11},{topic=__consumer_offsets,partition=30,error_code=11},{topic=__consumer_offsets,partition=26,error_code=11},{topic=__consumer_offsets,partition=5,error_code=11},{topic=__consumer_offsets,partition=38,error_code=11},{topic=__consumer_offsets,partition=1,error_code=11},{topic=__consumer_offsets,partition=34,error_code=11},{topic=__consumer_offsets,partition=16,error_code=11},{topic=__consumer_offsets,partition=45,error_code=11},{topic=__consumer_offsets,partition=12,error_code=11},{topic=__consumer_offsets,partition=41,error_code=11},{topic=__consumer_offsets,partition=24,error_code=11},{topic=__consumer_offsets,partition=20,error_code=11},{topic=__consumer_offsets,partition=49,error_code=11},{topic=__consumer_offsets,partition=0,error_code=11},{topic=__consumer_offsets,partition=29,error_code=11},{topic=__consumer_offsets,partition=25,error_code=11},{topic=__consumer_offsets,partition=8,error_code=11},{topic=__consumer_offsets,partition=37,error_code=11},{topic=__consumer_offsets,partition=4,error_code=11},{topic=__consumer_offsets,partition=33,error_code=11},{topic=__consumer_offsets,partition=15,error_code=11},{topic=__consumer_offsets,partition=48,error_code=11},{topic=__consumer_offsets,partition=11,error_code=11},{topic=__consumer_offsets,partition=44,error_code=11},{topic=__consumer_offsets,partition=23,error_code=11},{topic=__consumer_offsets,partition=19,error_code=11},{topic=__consumer_offsets,partition=32,error_code=11},{topic=__consumer_offsets,partition=28,error_code=11},{topic=__consumer_offsets,partition=7,error_code=11},{topic=__consumer_offsets,partition=40,error_code=11},{topic=__consumer_offsets,partition=3,error_code=11},{topic=__consumer_offsets,partition=36,error_code=11},{topic=__consumer_offsets,partition=47,error_code=11},{topic=__consumer_offsets,partition=14,error_code=11},{topic=__consumer_offsets,partition=43,error_code=11},{topic=__consumer_offsets,partition=10,error_code=11},{topic=__consumer_offsets,partition=22,error_code=11},{topic=__consumer_offsets,partition=18,error_code=11},{topic=__consumer_offsets,partition=31,error_code=11},{topic=__consumer_offsets,partition=27,error_code=11},{topic=temperature,partition=1,error_code=11},{topic=__consumer_offsets,partition=39,error_code=11},{topic=__consumer_offsets,partition=6,error_code=11},{topic=__consumer_offsets,partition=35,error_code=11},{topic=__consumer_offsets,partition=2,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-13 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-46 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-42 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-30 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-1 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-34 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-16 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-12 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-24 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-49 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-0 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-25 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-37 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-4 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-48 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-19 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-28 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,215] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-7 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,216] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-40 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,216] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-36 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,216] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition temperature-2 since its associated leader epoch 1 is not higher than the current leader epoch 1 (state.change.logger)
[2018-12-09 01:43:52,216] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-43 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,216] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-10 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,216] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-22 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,216] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-18 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,216] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-31 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,216] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 250 epoch 2 for partition __consumer_offsets-6 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 250 from controller 1 epoch 2 starting the become-follower transition for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:52,216] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-29 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,216] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:52,216] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-45 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,216] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-26 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,216] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-23 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,216] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-39 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,216] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-20 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,216] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-17 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-14 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-33 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-11 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-27 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-8 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-5 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-21 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-2 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-15 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-9 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-47 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-38 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-35 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-44 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-41 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-32 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] INFO [Broker id=1] Skipped the become-follower state change after marking its partition as follower with correlation id 250 from controller 1 epoch 2 for partition __consumer_offsets-3 (last update controller epoch 2) since the new leader 2 is the same as the old leader (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:52,217] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 250 from controller 1 epoch 2 for the become-follower transition for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=13,error_code=11},{topic=__consumer_offsets,partition=46,error_code=11},{topic=__consumer_offsets,partition=9,error_code=0},{topic=__consumer_offsets,partition=42,error_code=11},{topic=__consumer_offsets,partition=21,error_code=0},{topic=__consumer_offsets,partition=17,error_code=0},{topic=__consumer_offsets,partition=30,error_code=11},{topic=__consumer_offsets,partition=26,error_code=0},{topic=__consumer_offsets,partition=5,error_code=0},{topic=__consumer_offsets,partition=38,error_code=0},{topic=__consumer_offsets,partition=1,error_code=11},{topic=__consumer_offsets,partition=34,error_code=11},{topic=__consumer_offsets,partition=16,error_code=11},{topic=__consumer_offsets,partition=45,error_code=0},{topic=__consumer_offsets,partition=12,error_code=11},{topic=__consumer_offsets,partition=41,error_code=0},{topic=__consumer_offsets,partition=24,error_code=11},{topic=__consumer_offsets,partition=20,error_code=0},{topic=__consumer_offsets,partition=49,error_code=11},{topic=__consumer_offsets,partition=0,error_code=11},{topic=__consumer_offsets,partition=29,error_code=0},{topic=__consumer_offsets,partition=25,error_code=11},{topic=__consumer_offsets,partition=8,error_code=0},{topic=__consumer_offsets,partition=37,error_code=11},{topic=__consumer_offsets,partition=4,error_code=11},{topic=__consumer_offsets,partition=33,error_code=0},{topic=__consumer_offsets,partition=15,error_code=0},{topic=__consumer_offsets,partition=48,error_code=11},{topic=__consumer_offsets,partition=11,error_code=0},{topic=__consumer_offsets,partition=44,error_code=0},{topic=__consumer_offsets,partition=23,error_code=0},{topic=__consumer_offsets,partition=19,error_code=11},{topic=__consumer_offsets,partition=32,error_code=0},{topic=__consumer_offsets,partition=28,error_code=11},{topic=__consumer_offsets,partition=7,error_code=11},{topic=__consumer_offsets,partition=40,error_code=11},{topic=__consumer_offsets,partition=3,error_code=0},{topic=__consumer_offsets,partition=36,error_code=11},{topic=temperature,partition=2,error_code=11},{topic=__consumer_offsets,partition=47,error_code=0},{topic=__consumer_offsets,partition=14,error_code=0},{topic=__consumer_offsets,partition=43,error_code=11},{topic=__consumer_offsets,partition=10,error_code=11},{topic=__consumer_offsets,partition=22,error_code=11},{topic=__consumer_offsets,partition=18,error_code=11},{topic=__consumer_offsets,partition=31,error_code=11},{topic=__consumer_offsets,partition=27,error_code=0},{topic=__consumer_offsets,partition=39,error_code=0},{topic=__consumer_offsets,partition=6,error_code=11},{topic=__consumer_offsets,partition=35,error_code=0},{topic=__consumer_offsets,partition=2,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,218] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) for partition humidity-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 3], offlineReplicas=[1, 3]) for partition temperature-2 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[3, 2], offlineReplicas=[3, 2]) for partition temperature-1 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 251 (state.change.logger)
[2018-12-09 01:43:52,219] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,400] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:54,400] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:54,401] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-43 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,401] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=43,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,401] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:54,401] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:54,402] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:54,403] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=43,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,403] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 253 (state.change.logger)
[2018-12-09 01:43:54,404] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,406] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-14 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,406] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:54,406] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:54,406] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:54,406] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,407] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:54,407] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:54,408] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=43,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,408] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=14,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,409] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,410] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-28 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,410] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:54,410] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:54,410] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:54,411] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=28,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,413] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:54,413] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:54,413] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=14,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,414] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 256 (state.change.logger)
[2018-12-09 01:43:54,414] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,415] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-4 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,415] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:54,415] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:54,415] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:54,415] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:54,415] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:54,416] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=14,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,416] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:54,416] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:54,417] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=28,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,417] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-36 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,417] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:54,417] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:54,417] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 259 (state.change.logger)
[2018-12-09 01:43:54,418] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:54,418] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,419] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:54,419] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:54,420] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=28,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,420] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-6 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,421] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:54,421] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:54,421] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:54,421] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:54,421] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:54,421] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=4,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,422] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 262 (state.change.logger)
[2018-12-09 01:43:54,422] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,423] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:54,423] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:54,423] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-39 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,423] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=4,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,423] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:54,424] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:54,424] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:54,424] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:54,424] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:54,425] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=36,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,425] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 265 (state.change.logger)
[2018-12-09 01:43:54,426] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,427] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-23 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,427] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:54,427] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:54,427] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:54,427] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:54,427] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,427] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=36,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,427] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:54,428] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=4,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,429] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:54,429] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:54,430] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,430] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-24 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,430] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:54,430] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:54,430] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=36,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,430] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:54,431] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=6,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,431] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,432] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 268 (state.change.logger)
[2018-12-09 01:43:54,432] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,432] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=6,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,432] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-38 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,433] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:54,433] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:54,433] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:54,433] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:54,433] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,433] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:54,433] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=6,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,434] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:54,434] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:54,434] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=39,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,434] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=39,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,434] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-16 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,434] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:54,435] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:54,435] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:54,435] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,435] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 271 (state.change.logger)
[2018-12-09 01:43:54,435] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=23,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,436] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,436] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,436] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-3 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,436] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:54,436] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:54,436] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:54,436] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:54,436] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:54,437] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=39,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,437] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=24,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,437] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:54,437] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:54,437] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,437] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=23,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,437] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 274 (state.change.logger)
[2018-12-09 01:43:54,438] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,438] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=38,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,438] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-21 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,438] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:54,438] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:54,438] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:54,439] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,439] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=16,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,439] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-10 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,439] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:54,440] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:54,440] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,440] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:54,440] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=3,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,441] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,441] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-40 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,441] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:54,441] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:54,441] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:54,441] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=21,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,441] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,442] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=10,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,442] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-34 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,442] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:54,442] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:54,442] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:54,442] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:54,442] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:54,443] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,443] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=40,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,443] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=23,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,444] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-25 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,444] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:54,444] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:54,444] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:54,444] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:54,444] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:54,445] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=24,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,445] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,445] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 277 (state.change.logger)
[2018-12-09 01:43:54,445] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-27 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,445] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,445] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:54,445] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:54,445] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:54,445] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:54,445] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:54,445] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=24,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,446] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:54,446] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=34,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,446] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:54,446] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=38,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,446] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 280 (state.change.logger)
[2018-12-09 01:43:54,446] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,446] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,446] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:54,446] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:54,447] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=25,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,447] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=38,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,447] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-42 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,447] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:54,447] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,447] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:54,447] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:54,447] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:54,447] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=16,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,447] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=27,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,447] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:54,447] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 283 (state.change.logger)
[2018-12-09 01:43:54,448] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,448] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,448] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:54,448] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:54,448] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=42,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,448] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=16,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,448] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:54,448] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:54,449] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-11 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,449] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:54,449] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,449] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:54,449] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=3,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,449] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:54,449] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 286 (state.change.logger)
[2018-12-09 01:43:54,449] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,449] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=11,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,449] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:54,449] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:54,452] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=3,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,452] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:54,452] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:54,452] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=21,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,452] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 289 (state.change.logger)
[2018-12-09 01:43:54,452] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,454] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:54,454] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:54,454] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,454] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=21,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,454] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-7 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,455] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:54,455] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:54,455] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:54,455] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:54,455] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:54,455] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-47 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,456] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:54,456] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:54,456] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:54,456] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=10,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,456] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=7,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,456] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 292 (state.change.logger)
[2018-12-09 01:43:54,457] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,457] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,457] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-9 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,457] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:54,457] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:54,457] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=47,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,457] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:54,457] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:54,457] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=10,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,457] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:54,457] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:54,457] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:54,457] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,457] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=40,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,457] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 295 (state.change.logger)
[2018-12-09 01:43:54,458] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,458] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=9,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,458] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:54,458] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:54,458] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,458] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=40,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,458] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-13 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,458] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:54,458] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:54,458] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:54,458] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:54,458] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=34,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,458] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:54,458] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=13,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,458] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 298 (state.change.logger)
[2018-12-09 01:43:54,459] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,459] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,459] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:54,459] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:54,459] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=34,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,459] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:54,459] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:54,459] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=25,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,459] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 301 (state.change.logger)
[2018-12-09 01:43:54,459] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,459] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:54,459] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:54,459] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=25,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,460] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:54,460] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:54,460] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=27,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,460] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 304 (state.change.logger)
[2018-12-09 01:43:54,460] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,460] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:54,460] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:54,460] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=27,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,460] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:54,460] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:54,460] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=42,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,460] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 307 (state.change.logger)
[2018-12-09 01:43:54,460] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,461] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:54,461] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:54,461] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=42,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,461] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:54,461] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:54,461] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=11,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,461] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-29 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,461] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:54,461] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:54,461] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:54,462] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=29,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,462] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,465] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 310 (state.change.logger)
[2018-12-09 01:43:54,465] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,465] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-8 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,465] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:54,465] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:54,466] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:54,466] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:54,466] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:54,466] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=8,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,466] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=11,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,466] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:54,466] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:54,466] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=7,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,466] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-22 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,466] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:54,466] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:54,466] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:54,466] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 313 (state.change.logger)
[2018-12-09 01:43:54,467] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,467] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:54,467] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:54,467] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,467] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=7,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,467] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:54,467] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:54,467] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=47,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,467] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-31 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,467] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:54,467] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:54,468] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:54,468] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 316 (state.change.logger)
[2018-12-09 01:43:54,468] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,468] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=22,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,468] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:54,468] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:54,468] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,468] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=47,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,468] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-18 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,468] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:54,468] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:54,469] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:54,469] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:54,469] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:54,469] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=9,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,469] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 319 (state.change.logger)
[2018-12-09 01:43:54,469] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,469] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=31,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,469] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:54,469] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:54,469] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=9,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,469] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-20 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,469] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:54,470] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:54,470] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:54,470] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:54,470] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:54,470] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=13,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,470] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 322 (state.change.logger)
[2018-12-09 01:43:54,470] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,470] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,470] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:54,470] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:54,470] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-37 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,470] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=18,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,470] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:54,470] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:54,470] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=13,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,471] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:54,471] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,471] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:54,471] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:54,471] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=29,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,471] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=20,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,471] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 325 (state.change.logger)
[2018-12-09 01:43:54,471] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,471] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,471] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:54,471] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:54,472] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=29,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,472] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-49 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,472] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:54,472] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:54,472] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:54,472] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:54,472] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=37,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,472] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:54,472] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=8,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,472] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,472] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 328 (state.change.logger)
[2018-12-09 01:43:54,472] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,473] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:54,473] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:54,473] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-12 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,473] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:54,473] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=8,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,473] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:54,473] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:54,473] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:54,473] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:54,473] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=22,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,473] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 331 (state.change.logger)
[2018-12-09 01:43:54,473] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,473] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,474] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-5 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,474] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:54,474] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:54,474] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:54,474] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:54,474] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:54,474] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,474] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=22,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,474] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:54,474] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:54,474] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=31,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,475] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=12,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,475] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 334 (state.change.logger)
[2018-12-09 01:43:54,475] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,475] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-32 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,475] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:54,475] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:54,475] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:54,475] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:54,475] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:54,475] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=31,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,475] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:54,476] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:54,476] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,476] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=18,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,476] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-2 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,476] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:54,476] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:54,476] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:54,476] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 337 (state.change.logger)
[2018-12-09 01:43:54,476] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,476] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:54,476] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:54,476] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=18,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,476] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=5,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,477] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-1 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,477] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:54,477] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:54,477] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:54,477] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:54,477] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:54,477] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,477] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=20,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,477] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 340 (state.change.logger)
[2018-12-09 01:43:54,477] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=32,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,478] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,478] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,478] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:54,478] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:54,478] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:54,478] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:54,478] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,478] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:54,478] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=20,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,478] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:54,478] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:54,478] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=2,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,478] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=37,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,479] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,479] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 343 (state.change.logger)
[2018-12-09 01:43:54,479] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,479] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:54,479] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:54,479] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=1,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,479] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=37,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,479] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-15 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,479] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,479] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:54,479] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:54,479] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:54,480] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=0,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,480] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:54,480] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:54,480] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,480] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,480] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 346 (state.change.logger)
[2018-12-09 01:43:54,480] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,480] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-44 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,480] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:54,480] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=15,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,480] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:54,480] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:54,480] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:54,480] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:54,480] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,481] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=44,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,481] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,481] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,481] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:54,481] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:54,481] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=12,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,482] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 349 (state.change.logger)
[2018-12-09 01:43:54,482] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,482] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:54,482] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:54,482] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=12,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,482] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:54,482] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:54,482] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=5,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,482] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 352 (state.change.logger)
[2018-12-09 01:43:54,482] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,482] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:54,482] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:54,482] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=5,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,483] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:54,483] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:54,483] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=32,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,483] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 355 (state.change.logger)
[2018-12-09 01:43:54,483] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-17 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,483] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:54,483] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:54,483] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:54,484] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-48 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,484] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:54,484] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:54,484] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:54,484] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,484] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:54,484] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:54,484] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=17,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,484] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=32,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,484] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-26 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,484] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:54,484] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:54,485] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:54,485] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,485] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:54,485] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:54,485] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-33 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,485] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:54,485] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:54,485] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:54,485] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=48,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,485] TRACE [Controller id=1 epoch=2] Started leader election for partition temperature-2 (state.change.logger)
[2018-12-09 01:43:54,486] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=2,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,486] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 358 (state.change.logger)
[2018-12-09 01:43:54,486] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,486] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,486] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-2 due to: No other replicas in ISR 1 for temperature-2 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,486] ERROR [Controller id=1 epoch=2] Initiated state change for partition temperature-2 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-2 due to: No other replicas in ISR 1 for temperature-2 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 1 for temperature-2 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,486] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=26,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,486] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,487] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:54,487] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:54,487] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition temperature-0 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,487] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2, zkVersion=1, replicas=2,1, isNew=false) to broker 2 for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:54,487] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=33,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,487] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2, 1], offlineReplicas=[2, 1]) to brokers Set(1, 2) for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:54,487] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=2,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,487] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:54,487] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:54,487] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,488] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=1,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,488] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 361 (state.change.logger)
[2018-12-09 01:43:54,488] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=temperature,partition=0,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,488] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,488] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:54,488] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:54,488] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,488] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-41 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,488] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:54,488] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:54,489] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:54,489] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=1,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,489] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=41,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,489] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,489] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:54,489] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-45 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,489] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:54,489] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:54,489] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:54,490] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:54,490] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-35 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,490] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:54,490] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:54,490] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:54,491] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=0,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,491] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 364 (state.change.logger)
[2018-12-09 01:43:54,491] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,492] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=45,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,492] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-46 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,492] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:54,492] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,492] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:54,492] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=35,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,492] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:54,492] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:54,493] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:54,493] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,493] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=0,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,493] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=46,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,493] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:54,493] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:54,493] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=15,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,493] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,494] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 367 (state.change.logger)
[2018-12-09 01:43:54,494] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,494] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:54,494] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-19 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,494] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:54,494] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:54,494] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:54,494] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=15,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,494] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:54,494] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=19,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,495] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,495] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-30 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:54,495] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:54,495] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:54,495] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:54,495] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=30,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,496] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:54,498] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:54,498] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:54,499] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=44,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,499] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 370 (state.change.logger)
[2018-12-09 01:43:54,499] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,499] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:54,499] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:54,499] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=44,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,499] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:54,499] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:54,500] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=17,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,500] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 373 (state.change.logger)
[2018-12-09 01:43:54,500] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,500] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:54,500] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:54,500] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=17,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,500] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:54,500] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:54,500] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=48,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,500] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 376 (state.change.logger)
[2018-12-09 01:43:54,500] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,500] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:54,500] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:54,501] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=48,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,501] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:54,501] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:54,501] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=26,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,501] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 379 (state.change.logger)
[2018-12-09 01:43:54,501] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,502] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:54,502] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:54,502] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=26,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,502] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:54,502] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:54,502] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=33,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,502] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 382 (state.change.logger)
[2018-12-09 01:43:54,502] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,502] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:54,502] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:54,502] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=33,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,503] TRACE [Broker id=1] Handling stop replica (delete=false) for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:54,503] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:54,503] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=temperature,partition=0,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,503] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2, 1], offlineReplicas=[2, 1]) for partition temperature-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 385 (state.change.logger)
[2018-12-09 01:43:54,503] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,503] TRACE [Broker id=1] Handling stop replica (delete=false) for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:54,503] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:54,503] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=temperature,partition=0,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,503] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:54,503] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:54,503] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=41,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,503] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 388 (state.change.logger)
[2018-12-09 01:43:54,503] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,504] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:54,504] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:54,504] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=41,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,504] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:54,504] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:54,504] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=45,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,504] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 391 (state.change.logger)
[2018-12-09 01:43:54,504] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,504] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:54,504] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:54,504] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=45,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,504] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:54,504] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:54,504] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=35,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,504] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 394 (state.change.logger)
[2018-12-09 01:43:54,504] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,505] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:54,505] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:54,505] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=35,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,505] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:54,505] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:54,505] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=46,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,505] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 397 (state.change.logger)
[2018-12-09 01:43:54,505] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,505] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:54,505] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:54,505] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=46,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,505] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:54,505] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:54,505] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=19,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,506] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 400 (state.change.logger)
[2018-12-09 01:43:54,506] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,506] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:54,506] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:54,506] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=19,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,506] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:54,506] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:54,506] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=30,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,506] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 403 (state.change.logger)
[2018-12-09 01:43:54,506] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,506] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:54,506] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:54,506] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=30,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:54,519] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:54,519] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-43 due to: No other replicas in ISR 2 for __consumer_offsets-43 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,519] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-43 due to: No other replicas in ISR 2 for __consumer_offsets-43 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-43 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,520] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:54,520] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-14 due to: No other replicas in ISR 2 for __consumer_offsets-14 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,520] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-14 due to: No other replicas in ISR 2 for __consumer_offsets-14 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-14 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,520] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:54,521] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-28 due to: No other replicas in ISR 2 for __consumer_offsets-28 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,521] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-28 due to: No other replicas in ISR 2 for __consumer_offsets-28 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-28 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,521] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:54,521] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-4 due to: No other replicas in ISR 2 for __consumer_offsets-4 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,522] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-4 due to: No other replicas in ISR 2 for __consumer_offsets-4 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-4 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,522] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:54,522] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-36 due to: No other replicas in ISR 2 for __consumer_offsets-36 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,522] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-36 due to: No other replicas in ISR 2 for __consumer_offsets-36 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-36 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,522] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:54,523] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-6 due to: No other replicas in ISR 2 for __consumer_offsets-6 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,523] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-6 due to: No other replicas in ISR 2 for __consumer_offsets-6 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-6 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,523] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:54,523] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-39 due to: No other replicas in ISR 2 for __consumer_offsets-39 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,523] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-39 due to: No other replicas in ISR 2 for __consumer_offsets-39 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-39 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:54,523] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:54,524] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-23 due to: No other replicas in ISR 2 for __consumer_offsets-23 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,524] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-23 due to: No other replicas in ISR 2 for __consumer_offsets-23 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-23 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:54,524] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:54,524] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-24 due to: No other replicas in ISR 2 for __consumer_offsets-24 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,524] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-24 due to: No other replicas in ISR 2 for __consumer_offsets-24 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-24 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,524] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:54,525] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-38 due to: No other replicas in ISR 2 for __consumer_offsets-38 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,525] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-38 due to: No other replicas in ISR 2 for __consumer_offsets-38 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-38 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,525] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:54,525] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-16 due to: No other replicas in ISR 2 for __consumer_offsets-16 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,525] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-16 due to: No other replicas in ISR 2 for __consumer_offsets-16 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-16 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 26 more
[2018-12-09 01:43:54,525] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:54,526] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-3 due to: No other replicas in ISR 2 for __consumer_offsets-3 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,526] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-3 due to: No other replicas in ISR 2 for __consumer_offsets-3 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-3 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 26 more
[2018-12-09 01:43:54,526] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:54,526] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-21 due to: No other replicas in ISR 2 for __consumer_offsets-21 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,526] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-21 due to: No other replicas in ISR 2 for __consumer_offsets-21 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-21 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,526] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:54,527] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-10 due to: No other replicas in ISR 2 for __consumer_offsets-10 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,527] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-10 due to: No other replicas in ISR 2 for __consumer_offsets-10 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-10 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,527] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:54,527] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-40 due to: No other replicas in ISR 2 for __consumer_offsets-40 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,527] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-40 due to: No other replicas in ISR 2 for __consumer_offsets-40 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-40 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,527] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:54,528] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-34 due to: No other replicas in ISR 2 for __consumer_offsets-34 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,528] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-34 due to: No other replicas in ISR 2 for __consumer_offsets-34 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-34 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:54,528] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:54,528] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-25 due to: No other replicas in ISR 2 for __consumer_offsets-25 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,528] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-25 due to: No other replicas in ISR 2 for __consumer_offsets-25 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-25 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,528] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:54,529] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-27 due to: No other replicas in ISR 2 for __consumer_offsets-27 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,529] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-27 due to: No other replicas in ISR 2 for __consumer_offsets-27 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-27 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,529] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:54,529] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-42 due to: No other replicas in ISR 2 for __consumer_offsets-42 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,529] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-42 due to: No other replicas in ISR 2 for __consumer_offsets-42 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-42 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,529] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:54,530] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-11 due to: No other replicas in ISR 2 for __consumer_offsets-11 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,530] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-11 due to: No other replicas in ISR 2 for __consumer_offsets-11 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-11 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,530] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:54,530] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-7 due to: No other replicas in ISR 2 for __consumer_offsets-7 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,530] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-7 due to: No other replicas in ISR 2 for __consumer_offsets-7 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-7 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,530] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:54,531] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-47 due to: No other replicas in ISR 2 for __consumer_offsets-47 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,531] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-47 due to: No other replicas in ISR 2 for __consumer_offsets-47 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-47 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,531] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:54,531] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-9 due to: No other replicas in ISR 2 for __consumer_offsets-9 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,531] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-9 due to: No other replicas in ISR 2 for __consumer_offsets-9 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-9 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,531] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:54,532] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-13 due to: No other replicas in ISR 2 for __consumer_offsets-13 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,532] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-13 due to: No other replicas in ISR 2 for __consumer_offsets-13 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-13 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:54,532] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:54,532] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-29 due to: No other replicas in ISR 2 for __consumer_offsets-29 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,532] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-29 due to: No other replicas in ISR 2 for __consumer_offsets-29 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-29 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,532] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:54,533] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-8 due to: No other replicas in ISR 2 for __consumer_offsets-8 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,533] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-8 due to: No other replicas in ISR 2 for __consumer_offsets-8 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-8 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,533] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:54,534] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-22 due to: No other replicas in ISR 2 for __consumer_offsets-22 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,534] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-22 due to: No other replicas in ISR 2 for __consumer_offsets-22 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-22 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,534] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:54,534] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-31 due to: No other replicas in ISR 2 for __consumer_offsets-31 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,534] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-31 due to: No other replicas in ISR 2 for __consumer_offsets-31 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-31 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,535] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:54,535] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-18 due to: No other replicas in ISR 2 for __consumer_offsets-18 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,535] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-18 due to: No other replicas in ISR 2 for __consumer_offsets-18 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-18 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,535] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:54,536] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-20 due to: No other replicas in ISR 2 for __consumer_offsets-20 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,536] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-20 due to: No other replicas in ISR 2 for __consumer_offsets-20 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-20 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,536] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:54,536] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-37 due to: No other replicas in ISR 2 for __consumer_offsets-37 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,536] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-37 due to: No other replicas in ISR 2 for __consumer_offsets-37 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-37 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:54,536] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:54,537] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-49 due to: No other replicas in ISR 2 for __consumer_offsets-49 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,537] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-49 due to: No other replicas in ISR 2 for __consumer_offsets-49 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-49 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,537] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:54,537] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-12 due to: No other replicas in ISR 2 for __consumer_offsets-12 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,537] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-12 due to: No other replicas in ISR 2 for __consumer_offsets-12 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-12 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,537] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:54,538] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-5 due to: No other replicas in ISR 2 for __consumer_offsets-5 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,538] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-5 due to: No other replicas in ISR 2 for __consumer_offsets-5 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-5 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,538] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:54,538] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-32 due to: No other replicas in ISR 2 for __consumer_offsets-32 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,538] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-32 due to: No other replicas in ISR 2 for __consumer_offsets-32 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-32 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,538] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:54,539] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-2 due to: No other replicas in ISR 2 for __consumer_offsets-2 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,539] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-2 due to: No other replicas in ISR 2 for __consumer_offsets-2 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-2 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,539] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:54,539] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-1 due to: No other replicas in ISR 2 for __consumer_offsets-1 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,539] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-1 due to: No other replicas in ISR 2 for __consumer_offsets-1 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-1 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,539] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:54,540] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-0 due to: No other replicas in ISR 2 for __consumer_offsets-0 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,540] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-0 due to: No other replicas in ISR 2 for __consumer_offsets-0 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-0 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,540] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:54,540] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-15 due to: No other replicas in ISR 2 for __consumer_offsets-15 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,540] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-15 due to: No other replicas in ISR 2 for __consumer_offsets-15 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-15 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,540] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:54,540] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-44 due to: No other replicas in ISR 2 for __consumer_offsets-44 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,540] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-44 due to: No other replicas in ISR 2 for __consumer_offsets-44 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-44 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 25 more
[2018-12-09 01:43:54,541] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:54,541] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-17 due to: No other replicas in ISR 2 for __consumer_offsets-17 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,541] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-17 due to: No other replicas in ISR 2 for __consumer_offsets-17 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-17 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 25 more
[2018-12-09 01:43:54,541] TRACE [Controller id=1 epoch=2] Started leader election for partition temperature-1 (state.change.logger)
[2018-12-09 01:43:54,541] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-1 due to: No other replicas in ISR 2 for temperature-1 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,541] ERROR [Controller id=1 epoch=2] Initiated state change for partition temperature-1 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-1 due to: No other replicas in ISR 2 for temperature-1 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for temperature-1 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,542] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:54,542] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-48 due to: No other replicas in ISR 2 for __consumer_offsets-48 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,542] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-48 due to: No other replicas in ISR 2 for __consumer_offsets-48 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-48 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,542] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:54,543] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-26 due to: No other replicas in ISR 2 for __consumer_offsets-26 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,543] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-26 due to: No other replicas in ISR 2 for __consumer_offsets-26 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-26 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,543] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:54,543] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-33 due to: No other replicas in ISR 2 for __consumer_offsets-33 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,543] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-33 due to: No other replicas in ISR 2 for __consumer_offsets-33 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-33 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,543] TRACE [Controller id=1 epoch=2] Started leader election for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:54,544] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-0 due to: No other replicas in ISR 2 for temperature-0 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,544] ERROR [Controller id=1 epoch=2] Initiated state change for partition temperature-0 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-0 due to: No other replicas in ISR 2 for temperature-0 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for temperature-0 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:54,544] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:54,544] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-41 due to: No other replicas in ISR 2 for __consumer_offsets-41 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,544] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-41 due to: No other replicas in ISR 2 for __consumer_offsets-41 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-41 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:54,544] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:54,544] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-45 due to: No other replicas in ISR 2 for __consumer_offsets-45 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,544] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-45 due to: No other replicas in ISR 2 for __consumer_offsets-45 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-45 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:54,545] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:54,545] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-35 due to: No other replicas in ISR 2 for __consumer_offsets-35 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,545] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-35 due to: No other replicas in ISR 2 for __consumer_offsets-35 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-35 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,545] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:54,545] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-46 due to: No other replicas in ISR 2 for __consumer_offsets-46 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,545] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-46 due to: No other replicas in ISR 2 for __consumer_offsets-46 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-46 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,545] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:54,546] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-19 due to: No other replicas in ISR 2 for __consumer_offsets-19 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,546] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-19 due to: No other replicas in ISR 2 for __consumer_offsets-19 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-19 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:54,546] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:54,546] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-30 due to: No other replicas in ISR 2 for __consumer_offsets-30 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:54,546] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-30 due to: No other replicas in ISR 2 for __consumer_offsets-30 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-30 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:59,500] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:59,500] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:59,501] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=43,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,502] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-43 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,502] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:59,502] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:59,503] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:59,503] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 406 (state.change.logger)
[2018-12-09 01:43:59,504] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=43,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,504] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,505] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,505] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:59,505] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:59,506] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=43,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,506] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-14 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,506] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:59,506] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:59,506] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:59,506] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:59,506] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:59,507] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=14,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,508] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 409 (state.change.logger)
[2018-12-09 01:43:59,508] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,509] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-28 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,509] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=14,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,509] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:59,509] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:59,509] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:59,509] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:59,510] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=14,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,510] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:59,510] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:59,510] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:59,511] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=28,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,540] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-4 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,540] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:59,540] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:59,540] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:59,540] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,540] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 412 (state.change.logger)
[2018-12-09 01:43:59,541] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=28,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,541] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,541] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,541] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:59,541] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:59,541] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-36 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,541] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:59,541] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:59,542] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:59,542] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=4,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,543] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,543] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=36,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,544] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-6 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,544] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:59,544] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,544] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:59,544] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:59,544] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=6,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,545] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=28,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,545] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,545] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:59,545] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:59,545] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=4,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,545] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 415 (state.change.logger)
[2018-12-09 01:43:59,546] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,546] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-39 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,546] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:59,546] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:59,546] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:59,546] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:59,546] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:59,546] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=4,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,546] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=39,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,546] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:59,546] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:59,546] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=36,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,546] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 418 (state.change.logger)
[2018-12-09 01:43:59,547] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,547] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-23 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,547] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:59,547] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:59,547] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:59,547] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:59,547] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:59,547] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=23,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,548] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=36,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,548] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,548] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:59,548] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:59,548] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=6,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,548] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-24 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,548] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:59,549] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:59,549] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 421 (state.change.logger)
[2018-12-09 01:43:59,549] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:59,549] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,549] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=24,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,549] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:59,549] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:59,549] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=6,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,549] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,549] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:59,549] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:59,550] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=39,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,550] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-38 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,550] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:59,550] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:59,550] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:59,550] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 424 (state.change.logger)
[2018-12-09 01:43:59,550] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=38,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,550] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,551] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-16 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,551] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:59,551] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:59,551] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,551] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:59,551] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:59,551] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=39,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,551] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:59,551] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=16,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,551] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:59,551] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:59,551] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=23,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,551] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,552] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 427 (state.change.logger)
[2018-12-09 01:43:59,552] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,552] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:59,552] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:59,552] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-3 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,552] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=23,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,552] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:59,552] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:59,552] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:59,553] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=3,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,553] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:59,553] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:59,553] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,554] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=24,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,554] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 430 (state.change.logger)
[2018-12-09 01:43:59,554] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,554] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:59,554] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:59,554] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=24,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,554] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:59,554] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:59,555] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-21 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,555] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:59,555] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:59,555] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:59,556] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=21,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,556] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=38,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,556] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-10 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,556] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:59,556] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:59,556] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:59,556] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,556] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 433 (state.change.logger)
[2018-12-09 01:43:59,557] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=10,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,557] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,557] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,557] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-40 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,557] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:59,557] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:59,557] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:59,558] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=40,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,558] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,558] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:59,558] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:59,558] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=38,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,558] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:59,558] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:59,558] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-34 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,558] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:59,558] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=16,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,558] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:59,558] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:59,559] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 436 (state.change.logger)
[2018-12-09 01:43:59,559] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=34,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,559] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,559] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,559] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:59,559] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:59,560] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=16,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,560] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:59,560] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:59,560] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=3,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,560] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-25 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,560] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:59,560] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:59,560] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:59,560] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 439 (state.change.logger)
[2018-12-09 01:43:59,561] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=25,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,561] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,561] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,561] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:59,561] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:59,561] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=3,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,561] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:59,561] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:59,561] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-27 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,561] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:59,562] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:59,562] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=21,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,562] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:59,562] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 442 (state.change.logger)
[2018-12-09 01:43:59,562] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=27,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,562] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,562] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:59,562] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:59,562] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,562] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=21,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,562] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:59,562] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:59,562] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-42 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,562] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:59,562] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=10,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,563] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:59,563] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 445 (state.change.logger)
[2018-12-09 01:43:59,563] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:59,563] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=42,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,563] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,563] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:59,563] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,563] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:59,563] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=10,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,563] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:59,563] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:59,563] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=40,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,564] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 448 (state.change.logger)
[2018-12-09 01:43:59,564] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-11 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,564] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:59,564] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:59,564] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:59,564] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,564] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=11,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,564] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:59,564] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:59,564] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-7 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,564] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:59,564] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:59,565] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:59,565] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=40,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,565] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,565] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=7,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,565] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:59,565] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:59,565] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,565] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=34,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,565] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-47 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,566] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:59,566] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:59,566] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 451 (state.change.logger)
[2018-12-09 01:43:59,566] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,566] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:59,566] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:59,566] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:59,566] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=47,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,566] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=34,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,566] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,566] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:59,566] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:59,566] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=25,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,567] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 454 (state.change.logger)
[2018-12-09 01:43:59,567] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-9 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,567] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:59,567] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,567] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:59,567] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:59,567] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:59,567] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=9,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,567] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=25,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,567] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:59,567] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,568] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:59,568] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:59,568] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=27,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,568] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 457 (state.change.logger)
[2018-12-09 01:43:59,568] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,568] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:59,568] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:59,568] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=27,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,568] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:59,568] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:59,568] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=42,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,568] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 460 (state.change.logger)
[2018-12-09 01:43:59,568] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,569] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:59,569] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:59,569] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-13 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,569] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:59,569] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=42,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,569] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:59,569] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:59,569] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:59,569] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:59,569] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=13,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,570] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,570] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=11,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,570] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 463 (state.change.logger)
[2018-12-09 01:43:59,570] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-29 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,570] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:59,570] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,570] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:59,570] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:59,570] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=29,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,571] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:59,571] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:59,571] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,571] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=11,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,571] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-8 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,571] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:59,571] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:59,571] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:59,571] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:59,571] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:59,571] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=7,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,571] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=8,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,572] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,572] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 466 (state.change.logger)
[2018-12-09 01:43:59,572] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,572] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:59,572] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:59,572] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-22 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,572] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=7,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,572] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:59,572] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:59,572] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:59,572] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:59,572] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:59,573] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=47,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,573] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=22,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,573] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,573] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 469 (state.change.logger)
[2018-12-09 01:43:59,573] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-31 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,573] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:59,573] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:59,573] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,573] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:59,573] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:59,573] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:59,574] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=31,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,574] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=47,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,574] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:59,574] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:59,574] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,574] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=9,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,574] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-18 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,574] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:59,574] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:59,574] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 472 (state.change.logger)
[2018-12-09 01:43:59,574] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:59,574] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,574] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:59,574] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=18,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,574] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:59,574] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=9,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,575] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,575] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:59,575] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:59,575] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=13,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,575] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 475 (state.change.logger)
[2018-12-09 01:43:59,575] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-20 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,575] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:59,575] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,575] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:59,575] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:59,575] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:59,575] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:59,575] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=20,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,575] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=13,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,575] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-37 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=29,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=37,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 478 (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-49 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=29,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:59,576] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=8,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 481 (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=8,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=22,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 484 (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-12 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:59,577] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=22,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=12,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=31,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-5 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 487 (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=5,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,578] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=31,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-32 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=18,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 490 (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=32,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=18,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:59,579] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-2 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,580] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:59,580] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=20,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,580] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:59,580] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:59,580] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 493 (state.change.logger)
[2018-12-09 01:43:59,580] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=2,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,580] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,580] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,580] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:59,580] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:59,580] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=20,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,580] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:59,580] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:59,580] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=37,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,581] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-1 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,581] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:59,581] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 496 (state.change.logger)
[2018-12-09 01:43:59,581] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:59,581] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,581] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:59,581] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:59,581] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:59,581] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=1,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,581] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=37,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,581] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,581] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-0 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,581] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:59,581] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:59,581] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:59,581] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:59,582] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,582] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:59,582] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 499 (state.change.logger)
[2018-12-09 01:43:59,582] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=0,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,582] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,582] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,582] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:59,582] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:59,582] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-15 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,582] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:59,582] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,582] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=12,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=15,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 502 (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-44 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=12,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=44,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:59,583] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:59,584] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=5,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,584] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,584] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 505 (state.change.logger)
[2018-12-09 01:43:59,584] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,584] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-17 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,584] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:59,584] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:59,584] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:59,584] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:59,584] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=5,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,584] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:59,584] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:59,584] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:59,584] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=17,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,584] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=32,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,584] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 508 (state.change.logger)
[2018-12-09 01:43:59,585] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,585] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,585] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:59,585] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-48 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,585] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:59,585] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:59,585] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:59,585] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=32,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,585] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:59,585] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=48,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,585] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:59,585] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:59,585] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,585] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=2,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-26 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 511 (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 2 for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,3,1, isNew=false) to broker 3 for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) to brokers Set(1, 2) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=2,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=26,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=1,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-33 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 514 (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,586] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:59,587] TRACE [Controller id=1 epoch=2] Started leader election for partition temperature-2 (state.change.logger)
[2018-12-09 01:43:59,587] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:59,587] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:59,587] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=33,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,587] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=1,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,587] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,587] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-2 due to: No other replicas in ISR 1 for temperature-2 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,587] ERROR [Controller id=1 epoch=2] Initiated state change for partition temperature-2 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-2 due to: No other replicas in ISR 1 for temperature-2 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 1 for temperature-2 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,587] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:59,587] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:59,587] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=0,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,587] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 517 (state.change.logger)
[2018-12-09 01:43:59,587] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition temperature-0 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2, zkVersion=1, replicas=2,1, isNew=false) to broker 2 for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=0,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2, 1], offlineReplicas=[2, 1]) to brokers Set(1, 2) for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=temperature,partition=0,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=15,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 520 (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-41 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:59,588] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=15,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=41,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=44,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 523 (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=44,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-45 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 2 for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false) to broker 3 for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) to brokers Set(1, 2) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:59,589] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=17,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 526 (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=45,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-35 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 2 for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=17,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=2,1,3, isNew=false) to broker 3 for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) to brokers Set(1, 2) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=48,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=35,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 529 (state.change.logger)
[2018-12-09 01:43:59,590] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,591] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,591] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:59,591] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:59,591] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=48,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,591] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:59,591] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:59,591] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=26,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,591] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-46 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,591] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 2 for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:59,591] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,3,2, isNew=false) to broker 3 for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:59,591] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) to brokers Set(1, 2) for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:59,591] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=46,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,592] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,592] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3, 1], offlineReplicas=[2, 3, 1]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 532 (state.change.logger)
[2018-12-09 01:43:59,592] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-19 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,592] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 2 for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:59,592] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,592] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=1,2,3, isNew=false) to broker 3 for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:59,592] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:59,592] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:59,592] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=19,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,592] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) to brokers Set(1, 2) for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:59,592] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=26,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,592] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,592] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:59,592] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:59,592] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=33,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,593] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 535 (state.change.logger)
[2018-12-09 01:43:59,593] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-30 from OfflineReplica to OfflineReplica (state.change.logger)
[2018-12-09 01:43:59,593] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 2 for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:59,593] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,1,2, isNew=false) to broker 3 for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:59,593] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) to brokers Set(1, 2) for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:59,593] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=30,error_code=11}]} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,594] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9093 (id: 2 rack: null) (state.change.logger)
[2018-12-09 01:43:59,594] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,594] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:59,594] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:59,594] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=33,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,594] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-43 (state.change.logger)
[2018-12-09 01:43:59,594] TRACE [Broker id=1] Handling stop replica (delete=false) for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:59,594] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:59,595] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-43 due to: No other replicas in ISR 2 for __consumer_offsets-43 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,595] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-43 due to: No other replicas in ISR 2 for __consumer_offsets-43 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-43 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,595] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-14 (state.change.logger)
[2018-12-09 01:43:59,595] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=temperature,partition=0,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,595] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2, 1], offlineReplicas=[2, 1]) for partition temperature-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 538 (state.change.logger)
[2018-12-09 01:43:59,595] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-14 due to: No other replicas in ISR 2 for __consumer_offsets-14 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,595] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-14 due to: No other replicas in ISR 2 for __consumer_offsets-14 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-14 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,596] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-28 (state.change.logger)
[2018-12-09 01:43:59,596] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,596] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-28 due to: No other replicas in ISR 2 for __consumer_offsets-28 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,596] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-28 due to: No other replicas in ISR 2 for __consumer_offsets-28 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-28 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,596] TRACE [Broker id=1] Handling stop replica (delete=false) for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:59,596] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:59,596] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-4 (state.change.logger)
[2018-12-09 01:43:59,596] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-4 due to: No other replicas in ISR 2 for __consumer_offsets-4 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,596] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-4 due to: No other replicas in ISR 2 for __consumer_offsets-4 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-4 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,597] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-36 (state.change.logger)
[2018-12-09 01:43:59,597] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-36 due to: No other replicas in ISR 2 for __consumer_offsets-36 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,597] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-36 due to: No other replicas in ISR 2 for __consumer_offsets-36 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-36 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,597] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-6 (state.change.logger)
[2018-12-09 01:43:59,597] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-6 due to: No other replicas in ISR 2 for __consumer_offsets-6 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,597] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-6 due to: No other replicas in ISR 2 for __consumer_offsets-6 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-6 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,597] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-39 (state.change.logger)
[2018-12-09 01:43:59,598] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-39 due to: No other replicas in ISR 2 for __consumer_offsets-39 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,598] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-39 due to: No other replicas in ISR 2 for __consumer_offsets-39 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-39 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:59,598] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-23 (state.change.logger)
[2018-12-09 01:43:59,598] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-23 due to: No other replicas in ISR 2 for __consumer_offsets-23 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,598] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-23 due to: No other replicas in ISR 2 for __consumer_offsets-23 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-23 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:59,598] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-24 (state.change.logger)
[2018-12-09 01:43:59,598] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=temperature,partition=0,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,600] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-24 due to: No other replicas in ISR 2 for __consumer_offsets-24 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,600] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-24 due to: No other replicas in ISR 2 for __consumer_offsets-24 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-24 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,600] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:59,601] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:59,601] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-38 (state.change.logger)
[2018-12-09 01:43:59,601] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=41,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,601] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 541 (state.change.logger)
[2018-12-09 01:43:59,601] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-38 due to: No other replicas in ISR 2 for __consumer_offsets-38 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,601] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-38 due to: No other replicas in ISR 2 for __consumer_offsets-38 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-38 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,601] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,602] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-16 (state.change.logger)
[2018-12-09 01:43:59,602] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:59,602] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:59,602] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=41,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,602] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:59,602] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:59,602] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-16 due to: No other replicas in ISR 2 for __consumer_offsets-16 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,602] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-16 due to: No other replicas in ISR 2 for __consumer_offsets-16 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-16 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 26 more
[2018-12-09 01:43:59,602] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=45,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,602] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-3 (state.change.logger)
[2018-12-09 01:43:59,602] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2, 1], offlineReplicas=[3, 2, 1]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 544 (state.change.logger)
[2018-12-09 01:43:59,602] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,603] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-3 due to: No other replicas in ISR 2 for __consumer_offsets-3 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,603] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-3 due to: No other replicas in ISR 2 for __consumer_offsets-3 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-3 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 26 more
[2018-12-09 01:43:59,603] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:59,603] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:59,603] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-21 (state.change.logger)
[2018-12-09 01:43:59,603] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=45,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,603] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:59,603] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-21 due to: No other replicas in ISR 2 for __consumer_offsets-21 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,603] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:59,603] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-21 due to: No other replicas in ISR 2 for __consumer_offsets-21 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-21 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,603] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=35,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,603] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-10 (state.change.logger)
[2018-12-09 01:43:59,603] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 1, 3], offlineReplicas=[2, 1, 3]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 547 (state.change.logger)
[2018-12-09 01:43:59,603] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,604] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:59,604] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:59,604] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=35,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,604] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-10 due to: No other replicas in ISR 2 for __consumer_offsets-10 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,604] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-10 due to: No other replicas in ISR 2 for __consumer_offsets-10 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-10 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,604] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:59,604] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:59,604] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-40 (state.change.logger)
[2018-12-09 01:43:59,604] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=46,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,604] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 3, 2], offlineReplicas=[1, 3, 2]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 550 (state.change.logger)
[2018-12-09 01:43:59,604] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-40 due to: No other replicas in ISR 2 for __consumer_offsets-40 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,604] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-40 due to: No other replicas in ISR 2 for __consumer_offsets-40 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-40 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,605] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-34 (state.change.logger)
[2018-12-09 01:43:59,605] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,605] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:59,605] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:59,605] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=46,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,605] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:59,605] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:59,605] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=19,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,606] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[1, 2, 3], offlineReplicas=[1, 2, 3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 553 (state.change.logger)
[2018-12-09 01:43:59,606] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,606] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-34 due to: No other replicas in ISR 2 for __consumer_offsets-34 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,606] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-34 due to: No other replicas in ISR 2 for __consumer_offsets-34 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-34 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:59,606] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:59,606] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:59,606] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-25 (state.change.logger)
[2018-12-09 01:43:59,606] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-25 due to: No other replicas in ISR 2 for __consumer_offsets-25 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,606] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-25 due to: No other replicas in ISR 2 for __consumer_offsets-25 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-25 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,607] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-27 (state.change.logger)
[2018-12-09 01:43:59,607] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-27 due to: No other replicas in ISR 2 for __consumer_offsets-27 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,607] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-27 due to: No other replicas in ISR 2 for __consumer_offsets-27 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-27 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,607] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-42 (state.change.logger)
[2018-12-09 01:43:59,608] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=19,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,608] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:59,608] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:59,610] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=30,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,610] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 1, 2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 556 (state.change.logger)
[2018-12-09 01:43:59,610] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,611] TRACE [Broker id=1] Handling stop replica (delete=false) for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:59,611] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:59,611] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=30,error_code=0}]} for a request sent to broker MureCkUbuntu:9092 (id: 1 rack: null) (state.change.logger)
[2018-12-09 01:43:59,614] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-42 due to: No other replicas in ISR 2 for __consumer_offsets-42 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,614] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-42 due to: No other replicas in ISR 2 for __consumer_offsets-42 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-42 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,615] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-11 (state.change.logger)
[2018-12-09 01:43:59,615] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-11 due to: No other replicas in ISR 2 for __consumer_offsets-11 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,615] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-11 due to: No other replicas in ISR 2 for __consumer_offsets-11 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-11 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,615] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-7 (state.change.logger)
[2018-12-09 01:43:59,616] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-7 due to: No other replicas in ISR 2 for __consumer_offsets-7 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,616] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-7 due to: No other replicas in ISR 2 for __consumer_offsets-7 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-7 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,616] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-47 (state.change.logger)
[2018-12-09 01:43:59,616] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-47 due to: No other replicas in ISR 2 for __consumer_offsets-47 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,616] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-47 due to: No other replicas in ISR 2 for __consumer_offsets-47 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-47 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,617] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-9 (state.change.logger)
[2018-12-09 01:43:59,617] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-9 due to: No other replicas in ISR 2 for __consumer_offsets-9 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,617] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-9 due to: No other replicas in ISR 2 for __consumer_offsets-9 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-9 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,617] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-13 (state.change.logger)
[2018-12-09 01:43:59,617] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-13 due to: No other replicas in ISR 2 for __consumer_offsets-13 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,618] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-13 due to: No other replicas in ISR 2 for __consumer_offsets-13 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-13 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:59,618] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-29 (state.change.logger)
[2018-12-09 01:43:59,618] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-29 due to: No other replicas in ISR 2 for __consumer_offsets-29 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,618] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-29 due to: No other replicas in ISR 2 for __consumer_offsets-29 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-29 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,618] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-8 (state.change.logger)
[2018-12-09 01:43:59,618] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-8 due to: No other replicas in ISR 2 for __consumer_offsets-8 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,618] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-8 due to: No other replicas in ISR 2 for __consumer_offsets-8 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-8 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,618] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-22 (state.change.logger)
[2018-12-09 01:43:59,619] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-22 due to: No other replicas in ISR 2 for __consumer_offsets-22 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,619] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-22 due to: No other replicas in ISR 2 for __consumer_offsets-22 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-22 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,619] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-31 (state.change.logger)
[2018-12-09 01:43:59,619] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-31 due to: No other replicas in ISR 2 for __consumer_offsets-31 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,619] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-31 due to: No other replicas in ISR 2 for __consumer_offsets-31 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-31 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,619] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-18 (state.change.logger)
[2018-12-09 01:43:59,620] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-18 due to: No other replicas in ISR 2 for __consumer_offsets-18 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,620] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-18 due to: No other replicas in ISR 2 for __consumer_offsets-18 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-18 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,620] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-20 (state.change.logger)
[2018-12-09 01:43:59,620] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-20 due to: No other replicas in ISR 2 for __consumer_offsets-20 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,620] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-20 due to: No other replicas in ISR 2 for __consumer_offsets-20 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-20 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,620] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-37 (state.change.logger)
[2018-12-09 01:43:59,621] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-37 due to: No other replicas in ISR 2 for __consumer_offsets-37 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,621] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-37 due to: No other replicas in ISR 2 for __consumer_offsets-37 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-37 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:59,621] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-49 (state.change.logger)
[2018-12-09 01:43:59,621] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-49 due to: No other replicas in ISR 2 for __consumer_offsets-49 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,621] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-49 due to: No other replicas in ISR 2 for __consumer_offsets-49 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-49 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,621] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-12 (state.change.logger)
[2018-12-09 01:43:59,622] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-12 due to: No other replicas in ISR 2 for __consumer_offsets-12 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,622] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-12 due to: No other replicas in ISR 2 for __consumer_offsets-12 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-12 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,622] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-5 (state.change.logger)
[2018-12-09 01:43:59,623] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-5 due to: No other replicas in ISR 2 for __consumer_offsets-5 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,623] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-5 due to: No other replicas in ISR 2 for __consumer_offsets-5 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-5 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,623] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-32 (state.change.logger)
[2018-12-09 01:43:59,623] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-32 due to: No other replicas in ISR 2 for __consumer_offsets-32 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,623] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-32 due to: No other replicas in ISR 2 for __consumer_offsets-32 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-32 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,623] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-2 (state.change.logger)
[2018-12-09 01:43:59,623] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-2 due to: No other replicas in ISR 2 for __consumer_offsets-2 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,623] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-2 due to: No other replicas in ISR 2 for __consumer_offsets-2 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-2 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,624] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-1 (state.change.logger)
[2018-12-09 01:43:59,624] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-1 due to: No other replicas in ISR 2 for __consumer_offsets-1 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,624] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-1 due to: No other replicas in ISR 2 for __consumer_offsets-1 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-1 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,624] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-0 (state.change.logger)
[2018-12-09 01:43:59,624] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-0 due to: No other replicas in ISR 2 for __consumer_offsets-0 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,624] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-0 due to: No other replicas in ISR 2 for __consumer_offsets-0 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-0 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,624] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-15 (state.change.logger)
[2018-12-09 01:43:59,625] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-15 due to: No other replicas in ISR 2 for __consumer_offsets-15 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,625] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-15 due to: No other replicas in ISR 2 for __consumer_offsets-15 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-15 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,625] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-44 (state.change.logger)
[2018-12-09 01:43:59,625] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-44 due to: No other replicas in ISR 2 for __consumer_offsets-44 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,625] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-44 due to: No other replicas in ISR 2 for __consumer_offsets-44 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-44 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 25 more
[2018-12-09 01:43:59,625] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-17 (state.change.logger)
[2018-12-09 01:43:59,625] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-17 due to: No other replicas in ISR 2 for __consumer_offsets-17 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,625] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-17 due to: No other replicas in ISR 2 for __consumer_offsets-17 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-17 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 25 more
[2018-12-09 01:43:59,625] TRACE [Controller id=1 epoch=2] Started leader election for partition temperature-1 (state.change.logger)
[2018-12-09 01:43:59,626] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-1 due to: No other replicas in ISR 2 for temperature-1 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,626] ERROR [Controller id=1 epoch=2] Initiated state change for partition temperature-1 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-1 due to: No other replicas in ISR 2 for temperature-1 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for temperature-1 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,626] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-48 (state.change.logger)
[2018-12-09 01:43:59,626] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-48 due to: No other replicas in ISR 2 for __consumer_offsets-48 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,626] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-48 due to: No other replicas in ISR 2 for __consumer_offsets-48 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-48 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,626] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-26 (state.change.logger)
[2018-12-09 01:43:59,627] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-26 due to: No other replicas in ISR 2 for __consumer_offsets-26 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,627] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-26 due to: No other replicas in ISR 2 for __consumer_offsets-26 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-26 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,628] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-33 (state.change.logger)
[2018-12-09 01:43:59,628] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-33 due to: No other replicas in ISR 2 for __consumer_offsets-33 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,628] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-33 due to: No other replicas in ISR 2 for __consumer_offsets-33 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-33 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,629] TRACE [Controller id=1 epoch=2] Started leader election for partition temperature-0 (state.change.logger)
[2018-12-09 01:43:59,629] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-0 due to: No other replicas in ISR 2 for temperature-0 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,629] ERROR [Controller id=1 epoch=2] Initiated state change for partition temperature-0 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition temperature-0 due to: No other replicas in ISR 2 for temperature-0 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for temperature-0 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:59,629] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-41 (state.change.logger)
[2018-12-09 01:43:59,629] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-41 due to: No other replicas in ISR 2 for __consumer_offsets-41 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,629] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-41 due to: No other replicas in ISR 2 for __consumer_offsets-41 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-41 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:59,629] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-45 (state.change.logger)
[2018-12-09 01:43:59,630] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-45 due to: No other replicas in ISR 2 for __consumer_offsets-45 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,630] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-45 due to: No other replicas in ISR 2 for __consumer_offsets-45 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-45 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
[2018-12-09 01:43:59,630] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-35 (state.change.logger)
[2018-12-09 01:43:59,630] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-35 due to: No other replicas in ISR 2 for __consumer_offsets-35 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,630] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-35 due to: No other replicas in ISR 2 for __consumer_offsets-35 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-35 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,630] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-46 (state.change.logger)
[2018-12-09 01:43:59,630] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-46 due to: No other replicas in ISR 2 for __consumer_offsets-46 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,630] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-46 due to: No other replicas in ISR 2 for __consumer_offsets-46 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-46 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,631] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-19 (state.change.logger)
[2018-12-09 01:43:59,631] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-19 due to: No other replicas in ISR 2 for __consumer_offsets-19 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,631] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-19 due to: No other replicas in ISR 2 for __consumer_offsets-19 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-19 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 24 more
[2018-12-09 01:43:59,631] TRACE [Controller id=1 epoch=2] Started leader election for partition __consumer_offsets-30 (state.change.logger)
[2018-12-09 01:43:59,631] ERROR [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-30 due to: No other replicas in ISR 2 for __consumer_offsets-30 besides shutting down brokers 1,2 (state.change.logger)
[2018-12-09 01:43:59,631] ERROR [Controller id=1 epoch=2] Initiated state change for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: [Controller id=1 epoch=2] Encountered error while electing leader for partition __consumer_offsets-30 due to: No other replicas in ISR 2 for __consumer_offsets-30 besides shutting down brokers 1,2
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:324)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:110)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:109)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1489)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4$$anonfun$apply$23.apply(KafkaController.scala:1484)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1484)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown$4.apply(KafkaController.scala:1483)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1483)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$31.apply(KafkaController.scala:1461)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1461)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for __consumer_offsets-30 besides shutting down brokers 1,2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:186)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	... 23 more
